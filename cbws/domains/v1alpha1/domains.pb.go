// Code generated by protoc-gen-go. DO NOT EDIT.
// source: cbws/domains/v1alpha1/domains.proto

package v1alpha1

import (
	context "context"
	fmt "fmt"
	_ "github.com/cbws/go-cbws-grpc/cbws/iam/options/v1alpha1"
	proto "github.com/golang/protobuf/proto"
	_ "github.com/golang/protobuf/ptypes/duration"
	_ "github.com/golang/protobuf/ptypes/empty"
	_ "github.com/golang/protobuf/ptypes/timestamp"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// The domain list request.
type ListDomainsRequest struct {
	// Required. The resource name of the project associated with the service
	// accounts, such as `projects/my-project-123`.
	Parent string `protobuf:"bytes,1,opt,name=parent,proto3" json:"parent,omitempty"`
	// Optional limit on the number of domains to include in the
	// response. Further accounts can subsequently be obtained by including the
	// [ListDomainsResponse.next_page_token][cbws.domains.v1alpha1.ListDomainsResponse.next_page_token]
	// in a subsequent request.
	PageSize int32 `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	// Optional pagination token returned in an earlier
	// [ListDomainsResponse.next_page_token][cbws.domains.v1alpha1.ListDomainsResponse.next_page_token].
	PageToken            string   `protobuf:"bytes,3,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListDomainsRequest) Reset()         { *m = ListDomainsRequest{} }
func (m *ListDomainsRequest) String() string { return proto.CompactTextString(m) }
func (*ListDomainsRequest) ProtoMessage()    {}
func (*ListDomainsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ced669d6edd2f3da, []int{0}
}

func (m *ListDomainsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListDomainsRequest.Unmarshal(m, b)
}
func (m *ListDomainsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListDomainsRequest.Marshal(b, m, deterministic)
}
func (m *ListDomainsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListDomainsRequest.Merge(m, src)
}
func (m *ListDomainsRequest) XXX_Size() int {
	return xxx_messageInfo_ListDomainsRequest.Size(m)
}
func (m *ListDomainsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListDomainsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListDomainsRequest proto.InternalMessageInfo

func (m *ListDomainsRequest) GetParent() string {
	if m != nil {
		return m.Parent
	}
	return ""
}

func (m *ListDomainsRequest) GetPageSize() int32 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

func (m *ListDomainsRequest) GetPageToken() string {
	if m != nil {
		return m.PageToken
	}
	return ""
}

// The domain list response.
type ListDomainsResponse struct {
	// The list of matching domains.
	Domains []*Domain `protobuf:"bytes,1,rep,name=domains,proto3" json:"domains,omitempty"`
	// To retrieve the next page of results, set
	// [ListDomainsRequest.page_token][cbws.domains.v1alpha1.ListDomainsRequest.page_token]
	// to this value.
	NextPageToken        string   `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListDomainsResponse) Reset()         { *m = ListDomainsResponse{} }
func (m *ListDomainsResponse) String() string { return proto.CompactTextString(m) }
func (*ListDomainsResponse) ProtoMessage()    {}
func (*ListDomainsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_ced669d6edd2f3da, []int{1}
}

func (m *ListDomainsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListDomainsResponse.Unmarshal(m, b)
}
func (m *ListDomainsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListDomainsResponse.Marshal(b, m, deterministic)
}
func (m *ListDomainsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListDomainsResponse.Merge(m, src)
}
func (m *ListDomainsResponse) XXX_Size() int {
	return xxx_messageInfo_ListDomainsResponse.Size(m)
}
func (m *ListDomainsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListDomainsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListDomainsResponse proto.InternalMessageInfo

func (m *ListDomainsResponse) GetDomains() []*Domain {
	if m != nil {
		return m.Domains
	}
	return nil
}

func (m *ListDomainsResponse) GetNextPageToken() string {
	if m != nil {
		return m.NextPageToken
	}
	return ""
}

// The domain get request.
type GetDomainRequest struct {
	// Required. The resource name of the domain in the following format:
	// `domains/{domain}`.
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetDomainRequest) Reset()         { *m = GetDomainRequest{} }
func (m *GetDomainRequest) String() string { return proto.CompactTextString(m) }
func (*GetDomainRequest) ProtoMessage()    {}
func (*GetDomainRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ced669d6edd2f3da, []int{2}
}

func (m *GetDomainRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetDomainRequest.Unmarshal(m, b)
}
func (m *GetDomainRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetDomainRequest.Marshal(b, m, deterministic)
}
func (m *GetDomainRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetDomainRequest.Merge(m, src)
}
func (m *GetDomainRequest) XXX_Size() int {
	return xxx_messageInfo_GetDomainRequest.Size(m)
}
func (m *GetDomainRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetDomainRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetDomainRequest proto.InternalMessageInfo

func (m *GetDomainRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func init() {
	proto.RegisterType((*ListDomainsRequest)(nil), "cbws.domains.v1alpha1.ListDomainsRequest")
	proto.RegisterType((*ListDomainsResponse)(nil), "cbws.domains.v1alpha1.ListDomainsResponse")
	proto.RegisterType((*GetDomainRequest)(nil), "cbws.domains.v1alpha1.GetDomainRequest")
}

func init() {
	proto.RegisterFile("cbws/domains/v1alpha1/domains.proto", fileDescriptor_ced669d6edd2f3da)
}

var fileDescriptor_ced669d6edd2f3da = []byte{
	// 589 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x53, 0x41, 0x6f, 0xd3, 0x4c,
	0x10, 0x95, 0xdd, 0x7e, 0xfd, 0xe8, 0x56, 0x40, 0xb5, 0x08, 0x35, 0xb1, 0x5b, 0x5a, 0x52, 0x41,
	0xdb, 0x48, 0xb5, 0xd5, 0xf4, 0x80, 0x40, 0xea, 0x21, 0x2d, 0x22, 0x17, 0x90, 0x22, 0x17, 0x71,
	0x40, 0x91, 0xa2, 0xb5, 0x33, 0x75, 0x16, 0x62, 0xaf, 0xf1, 0x6e, 0xd2, 0x24, 0xa8, 0x97, 0x1e,
	0xe1, 0xc0, 0x01, 0x7e, 0x06, 0x27, 0xfa, 0x2f, 0x7a, 0xe5, 0xc6, 0x09, 0x21, 0x7e, 0x45, 0xc5,
	0x01, 0x79, 0xbd, 0x0e, 0x26, 0x4d, 0x2a, 0x4e, 0x96, 0xdf, 0x7b, 0xb3, 0xf3, 0xf6, 0xcd, 0x0e,
	0x5a, 0xf7, 0xdc, 0x63, 0x6e, 0xb7, 0x58, 0x40, 0x68, 0xc8, 0xed, 0xde, 0x0e, 0xe9, 0x44, 0x6d,
	0xb2, 0x93, 0x01, 0x56, 0x14, 0x33, 0xc1, 0xf0, 0xed, 0x44, 0x64, 0x65, 0x58, 0x26, 0x32, 0x36,
	0x64, 0x2d, 0x25, 0x81, 0xcd, 0x22, 0x41, 0x59, 0xbe, 0x5e, 0x01, 0x69, 0xbd, 0x51, 0xba, 0xaa,
	0x89, 0xd2, 0x2c, 0xfb, 0x8c, 0xf9, 0x1d, 0xb0, 0x49, 0x44, 0x6d, 0x12, 0x86, 0x4c, 0x90, 0xfc,
	0x09, 0x4b, 0x39, 0xd6, 0xeb, 0x50, 0x08, 0x85, 0x22, 0x56, 0x73, 0xc4, 0x11, 0x85, 0x4e, 0xab,
	0xe9, 0x42, 0x9b, 0xf4, 0x28, 0x8b, 0x95, 0xa0, 0x98, 0x13, 0xc4, 0xc0, 0x59, 0x37, 0xf6, 0x40,
	0x51, 0xa6, 0xa2, 0xe4, 0x9f, 0xdb, 0x3d, 0xb2, 0x21, 0x88, 0xc4, 0x40, 0x91, 0x77, 0xc6, 0xc9,
	0x56, 0x37, 0x96, 0x96, 0xc6, 0x1a, 0x8f, 0x78, 0x41, 0x03, 0xe0, 0x82, 0x04, 0x51, 0x2a, 0x28,
	0xbd, 0xd7, 0x10, 0x7e, 0x4a, 0xb9, 0x78, 0x9c, 0x5e, 0xdb, 0x81, 0x37, 0x5d, 0xe0, 0x02, 0x3f,
	0x44, 0x73, 0x11, 0x89, 0x21, 0x14, 0x05, 0x6d, 0x4d, 0xdb, 0x9c, 0xdf, 0xbf, 0xfb, 0xbd, 0xaa,
	0x5f, 0x54, 0x4d, 0x54, 0x8c, 0x62, 0xf6, 0x0a, 0x3c, 0xc1, 0x2d, 0x19, 0x76, 0x7f, 0x30, 0xb4,
	0xeb, 0x29, 0xe2, 0xa8, 0x02, 0x6c, 0xa2, 0xf9, 0x88, 0xf8, 0xd0, 0xe4, 0x74, 0x08, 0x05, 0x7d,
	0x4d, 0xdb, 0xfc, 0xcf, 0xb9, 0x96, 0x00, 0x87, 0x74, 0x08, 0x78, 0x05, 0x21, 0x49, 0x0a, 0xf6,
	0x1a, 0xc2, 0xc2, 0x4c, 0x72, 0xb6, 0x23, 0xe5, 0xcf, 0x13, 0xa0, 0xd4, 0x43, 0xb7, 0xfe, 0x32,
	0xc3, 0x23, 0x16, 0x72, 0xc0, 0x0f, 0xd0, 0xff, 0x6a, 0x2c, 0x05, 0x6d, 0x6d, 0x66, 0x73, 0xa1,
	0xb2, 0x62, 0x4d, 0x9c, 0xb5, 0x95, 0x16, 0x3a, 0x99, 0x1a, 0xdf, 0x47, 0x37, 0x43, 0xe8, 0x8b,
	0x66, 0xae, 0xa7, 0x2e, 0x7b, 0x5e, 0x4f, 0xe0, 0xfa, 0xa8, 0x6f, 0x0d, 0x2d, 0xd6, 0x40, 0xb5,
	0xcd, 0x22, 0xd8, 0x45, 0xb3, 0x21, 0x09, 0x40, 0x05, 0xb0, 0x2a, 0x03, 0x28, 0xa2, 0xa5, 0xac,
	0xe7, 0xe8, 0xfe, 0xaa, 0x4a, 0x8a, 0x2b, 0xbf, 0x74, 0x74, 0x43, 0xb9, 0x3f, 0x84, 0xb8, 0x47,
	0x3d, 0xc0, 0x9f, 0x35, 0xb4, 0x90, 0xbb, 0x14, 0xde, 0x9a, 0xe2, 0xfd, 0xf2, 0x14, 0x8c, 0xf2,
	0xbf, 0x48, 0xd3, 0x8c, 0x4a, 0x4f, 0xbe, 0x55, 0xa5, 0x85, 0xd3, 0x33, 0x73, 0x2e, 0xe5, 0xde,
	0x9d, 0x99, 0xb3, 0x1d, 0xca, 0xc5, 0xe9, 0xd7, 0x9f, 0x1f, 0xf5, 0x0d, 0x7c, 0xef, 0xcf, 0x93,
	0x7e, 0x9b, 0x8e, 0x6a, 0x2f, 0x1b, 0xa6, 0x5d, 0x3e, 0xc9, 0xde, 0x3d, 0xfe, 0xa0, 0xa1, 0xf9,
	0x51, 0x16, 0x78, 0x63, 0x8a, 0x83, 0xf1, 0xb4, 0x8c, 0xab, 0x27, 0x52, 0x7a, 0x34, 0xc9, 0xdd,
	0x8c, 0x0f, 0xa9, 0xb9, 0x65, 0x6c, 0xe4, 0xcc, 0x25, 0xba, 0xbd, 0x6c, 0x0d, 0xcb, 0x27, 0xc6,
	0xd6, 0x79, 0x75, 0x71, 0x3c, 0xf5, 0x8b, 0x2f, 0x26, 0x46, 0x97, 0xd0, 0xfd, 0x4f, 0x1a, 0x2a,
	0xf6, 0x07, 0xc3, 0xc9, 0x5e, 0xea, 0xda, 0xcb, 0x8a, 0x4f, 0x45, 0xbb, 0xeb, 0x5a, 0x1e, 0x0b,
	0x6c, 0xb9, 0xed, 0x3e, 0xdb, 0x4e, 0xbe, 0xdb, 0x7e, 0x1c, 0x79, 0xf6, 0xc4, 0xfd, 0x3f, 0xd7,
	0x8d, 0x03, 0xf7, 0x98, 0x37, 0x54, 0xde, 0x8d, 0x9a, 0x53, 0x3f, 0x68, 0xbc, 0x50, 0xe4, 0x0f,
	0x7d, 0x7d, 0x3a, 0xd9, 0x78, 0x06, 0x82, 0xb4, 0x88, 0x20, 0xee, 0x9c, 0xdc, 0xb5, 0xdd, 0xdf,
	0x01, 0x00, 0x00, 0xff, 0xff, 0x90, 0xef, 0x67, 0x00, 0xc7, 0x04, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// DomainsServiceClient is the client API for DomainsService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type DomainsServiceClient interface {
	ListDomains(ctx context.Context, in *ListDomainsRequest, opts ...grpc.CallOption) (*ListDomainsResponse, error)
	GetDomain(ctx context.Context, in *GetDomainRequest, opts ...grpc.CallOption) (*Domain, error)
}

type domainsServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewDomainsServiceClient(cc grpc.ClientConnInterface) DomainsServiceClient {
	return &domainsServiceClient{cc}
}

func (c *domainsServiceClient) ListDomains(ctx context.Context, in *ListDomainsRequest, opts ...grpc.CallOption) (*ListDomainsResponse, error) {
	out := new(ListDomainsResponse)
	err := c.cc.Invoke(ctx, "/cbws.domains.v1alpha1.DomainsService/ListDomains", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *domainsServiceClient) GetDomain(ctx context.Context, in *GetDomainRequest, opts ...grpc.CallOption) (*Domain, error) {
	out := new(Domain)
	err := c.cc.Invoke(ctx, "/cbws.domains.v1alpha1.DomainsService/GetDomain", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// DomainsServiceServer is the server API for DomainsService service.
type DomainsServiceServer interface {
	ListDomains(context.Context, *ListDomainsRequest) (*ListDomainsResponse, error)
	GetDomain(context.Context, *GetDomainRequest) (*Domain, error)
}

// UnimplementedDomainsServiceServer can be embedded to have forward compatible implementations.
type UnimplementedDomainsServiceServer struct {
}

func (*UnimplementedDomainsServiceServer) ListDomains(ctx context.Context, req *ListDomainsRequest) (*ListDomainsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListDomains not implemented")
}
func (*UnimplementedDomainsServiceServer) GetDomain(ctx context.Context, req *GetDomainRequest) (*Domain, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetDomain not implemented")
}

func RegisterDomainsServiceServer(s *grpc.Server, srv DomainsServiceServer) {
	s.RegisterService(&_DomainsService_serviceDesc, srv)
}

func _DomainsService_ListDomains_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListDomainsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DomainsServiceServer).ListDomains(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cbws.domains.v1alpha1.DomainsService/ListDomains",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DomainsServiceServer).ListDomains(ctx, req.(*ListDomainsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DomainsService_GetDomain_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetDomainRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DomainsServiceServer).GetDomain(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cbws.domains.v1alpha1.DomainsService/GetDomain",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DomainsServiceServer).GetDomain(ctx, req.(*GetDomainRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _DomainsService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "cbws.domains.v1alpha1.DomainsService",
	HandlerType: (*DomainsServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ListDomains",
			Handler:    _DomainsService_ListDomains_Handler,
		},
		{
			MethodName: "GetDomain",
			Handler:    _DomainsService_GetDomain_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "cbws/domains/v1alpha1/domains.proto",
}
