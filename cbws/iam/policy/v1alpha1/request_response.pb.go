// Code generated by protoc-gen-go. DO NOT EDIT.
// source: cbws/iam/policy/v1alpha1/request_response.proto

package v1alpha1

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type SetPolicyRequest struct {
	// REQUIRED: The resource for which the policy is being specified.
	// See the operation documentation for the appropriate value for this field.
	Resource string `protobuf:"bytes,1,opt,name=resource,proto3" json:"resource,omitempty"`
	// REQUIRED: The complete policy to be applied to the `resource`. The size of
	// the policy is limited to a few 10s of KB. An empty policy is a
	// valid policy but certain Cloud Platform services (such as Projects)
	// might reject them.
	Policy               *Policy  `protobuf:"bytes,2,opt,name=policy,proto3" json:"policy,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SetPolicyRequest) Reset()         { *m = SetPolicyRequest{} }
func (m *SetPolicyRequest) String() string { return proto.CompactTextString(m) }
func (*SetPolicyRequest) ProtoMessage()    {}
func (*SetPolicyRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_1d78fee26b432bbd, []int{0}
}

func (m *SetPolicyRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetPolicyRequest.Unmarshal(m, b)
}
func (m *SetPolicyRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetPolicyRequest.Marshal(b, m, deterministic)
}
func (m *SetPolicyRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetPolicyRequest.Merge(m, src)
}
func (m *SetPolicyRequest) XXX_Size() int {
	return xxx_messageInfo_SetPolicyRequest.Size(m)
}
func (m *SetPolicyRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SetPolicyRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SetPolicyRequest proto.InternalMessageInfo

func (m *SetPolicyRequest) GetResource() string {
	if m != nil {
		return m.Resource
	}
	return ""
}

func (m *SetPolicyRequest) GetPolicy() *Policy {
	if m != nil {
		return m.Policy
	}
	return nil
}

type GetPolicyRequest struct {
	// REQUIRED: The resource for which the policy is being requested.
	// See the operation documentation for the appropriate value for this field.
	Resource             string   `protobuf:"bytes,1,opt,name=resource,proto3" json:"resource,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetPolicyRequest) Reset()         { *m = GetPolicyRequest{} }
func (m *GetPolicyRequest) String() string { return proto.CompactTextString(m) }
func (*GetPolicyRequest) ProtoMessage()    {}
func (*GetPolicyRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_1d78fee26b432bbd, []int{1}
}

func (m *GetPolicyRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetPolicyRequest.Unmarshal(m, b)
}
func (m *GetPolicyRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetPolicyRequest.Marshal(b, m, deterministic)
}
func (m *GetPolicyRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetPolicyRequest.Merge(m, src)
}
func (m *GetPolicyRequest) XXX_Size() int {
	return xxx_messageInfo_GetPolicyRequest.Size(m)
}
func (m *GetPolicyRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetPolicyRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetPolicyRequest proto.InternalMessageInfo

func (m *GetPolicyRequest) GetResource() string {
	if m != nil {
		return m.Resource
	}
	return ""
}

type TestPermissionsRequest struct {
	// REQUIRED: The resource for which the policy detail is being requested.
	// See the operation documentation for the appropriate value for this field.
	Resource string `protobuf:"bytes,1,opt,name=resource,proto3" json:"resource,omitempty"`
	// The set of permissions to check for the `resource`. Permissions with
	// wildcards (such as '*' or 'storage.*') are not allowed. For more
	// information see
	// [IAM Overview](https://cloud.google.com/iam/docs/overview#permissions).
	Permissions          []string `protobuf:"bytes,2,rep,name=permissions,proto3" json:"permissions,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TestPermissionsRequest) Reset()         { *m = TestPermissionsRequest{} }
func (m *TestPermissionsRequest) String() string { return proto.CompactTextString(m) }
func (*TestPermissionsRequest) ProtoMessage()    {}
func (*TestPermissionsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_1d78fee26b432bbd, []int{2}
}

func (m *TestPermissionsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TestPermissionsRequest.Unmarshal(m, b)
}
func (m *TestPermissionsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TestPermissionsRequest.Marshal(b, m, deterministic)
}
func (m *TestPermissionsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TestPermissionsRequest.Merge(m, src)
}
func (m *TestPermissionsRequest) XXX_Size() int {
	return xxx_messageInfo_TestPermissionsRequest.Size(m)
}
func (m *TestPermissionsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_TestPermissionsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_TestPermissionsRequest proto.InternalMessageInfo

func (m *TestPermissionsRequest) GetResource() string {
	if m != nil {
		return m.Resource
	}
	return ""
}

func (m *TestPermissionsRequest) GetPermissions() []string {
	if m != nil {
		return m.Permissions
	}
	return nil
}

type TestPermissionsResponse struct {
	// A subset of `TestPermissionsRequest.permissions` that the caller is
	// allowed.
	Permissions          []string `protobuf:"bytes,1,rep,name=permissions,proto3" json:"permissions,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TestPermissionsResponse) Reset()         { *m = TestPermissionsResponse{} }
func (m *TestPermissionsResponse) String() string { return proto.CompactTextString(m) }
func (*TestPermissionsResponse) ProtoMessage()    {}
func (*TestPermissionsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_1d78fee26b432bbd, []int{3}
}

func (m *TestPermissionsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TestPermissionsResponse.Unmarshal(m, b)
}
func (m *TestPermissionsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TestPermissionsResponse.Marshal(b, m, deterministic)
}
func (m *TestPermissionsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TestPermissionsResponse.Merge(m, src)
}
func (m *TestPermissionsResponse) XXX_Size() int {
	return xxx_messageInfo_TestPermissionsResponse.Size(m)
}
func (m *TestPermissionsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_TestPermissionsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_TestPermissionsResponse proto.InternalMessageInfo

func (m *TestPermissionsResponse) GetPermissions() []string {
	if m != nil {
		return m.Permissions
	}
	return nil
}

func init() {
	proto.RegisterType((*SetPolicyRequest)(nil), "cbws.iam.policy.v1alpha1.SetPolicyRequest")
	proto.RegisterType((*GetPolicyRequest)(nil), "cbws.iam.policy.v1alpha1.GetPolicyRequest")
	proto.RegisterType((*TestPermissionsRequest)(nil), "cbws.iam.policy.v1alpha1.TestPermissionsRequest")
	proto.RegisterType((*TestPermissionsResponse)(nil), "cbws.iam.policy.v1alpha1.TestPermissionsResponse")
}

func init() {
	proto.RegisterFile("cbws/iam/policy/v1alpha1/request_response.proto", fileDescriptor_1d78fee26b432bbd)
}

var fileDescriptor_1d78fee26b432bbd = []byte{
	// 342 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x92, 0x41, 0x4b, 0x3a, 0x41,
	0x18, 0xc6, 0xd9, 0x15, 0xe4, 0xef, 0x78, 0x91, 0x3d, 0xfc, 0xdb, 0x84, 0x68, 0x59, 0x30, 0x24,
	0x70, 0x06, 0x8b, 0x0e, 0x11, 0x1d, 0x56, 0x0f, 0xd2, 0x41, 0x90, 0x2d, 0x3a, 0xc4, 0x82, 0xcc,
	0xae, 0xaf, 0xeb, 0xc0, 0xae, 0x33, 0xcd, 0x8c, 0x5a, 0xb7, 0x3e, 0x5f, 0x9f, 0x42, 0xfa, 0x18,
	0x9d, 0x42, 0x67, 0x2d, 0x25, 0x0c, 0xea, 0x34, 0x30, 0xef, 0xf3, 0xfc, 0xde, 0x67, 0xe6, 0x7d,
	0x11, 0x49, 0xe2, 0x85, 0x22, 0x8c, 0xe6, 0x44, 0xf0, 0x8c, 0x25, 0xcf, 0x64, 0xde, 0xa6, 0x99,
	0x98, 0xd0, 0x36, 0x91, 0xf0, 0x38, 0x03, 0xa5, 0x87, 0x12, 0x94, 0xe0, 0x53, 0x05, 0x58, 0x48,
	0xae, 0xb9, 0xe3, 0xae, 0x0c, 0x98, 0xd1, 0x1c, 0x1b, 0x03, 0xde, 0x18, 0xea, 0x8d, 0xbd, 0xa8,
	0x42, 0xb9, 0x06, 0xd4, 0x8f, 0x53, 0xce, 0xd3, 0x0c, 0x08, 0x15, 0x8c, 0x8c, 0x19, 0x64, 0xa3,
	0x61, 0x0c, 0x13, 0x3a, 0x67, 0x5c, 0x16, 0x82, 0xc3, 0x2d, 0x81, 0x04, 0xc5, 0x67, 0x32, 0x29,
	0x9a, 0xfb, 0x4f, 0xa8, 0x76, 0x0b, 0x7a, 0xb0, 0xc6, 0x85, 0x26, 0x9f, 0xd3, 0x40, 0xff, 0x36,
	0x2a, 0xd7, 0xf2, 0xac, 0x66, 0xa5, 0x53, 0x59, 0x06, 0xf6, 0x7b, 0x50, 0x42, 0xd6, 0x69, 0xf8,
	0x59, 0x72, 0xae, 0x51, 0xd9, 0xc4, 0x70, 0x6d, 0xcf, 0x6a, 0x56, 0xcf, 0x3c, 0xbc, 0xef, 0x21,
	0xd8, 0xf0, 0x3b, 0xa5, 0x65, 0x60, 0x87, 0x85, 0xc9, 0xbf, 0x44, 0xb5, 0xde, 0xdf, 0x3a, 0xfb,
	0x63, 0xf4, 0xff, 0x0e, 0x94, 0x1e, 0x80, 0xcc, 0x99, 0x52, 0x8c, 0x4f, 0xd5, 0x2f, 0xa3, 0x37,
	0x50, 0x55, 0x7c, 0x99, 0x5d, 0xdb, 0x2b, 0x35, 0x2b, 0x26, 0xdd, 0xf6, 0xbd, 0x7f, 0x85, 0x0e,
	0xbe, 0xf5, 0x31, 0xa3, 0x73, 0xbc, 0x5d, 0x82, 0xb5, 0x22, 0xec, 0x98, 0x3b, 0x2f, 0xd6, 0xc3,
	0x45, 0xca, 0xf4, 0x64, 0x16, 0xe3, 0x84, 0xe7, 0x66, 0x2b, 0x52, 0xde, 0x5a, 0x9d, 0xad, 0x54,
	0x8a, 0x64, 0xef, 0x9e, 0xbc, 0xda, 0x47, 0xdd, 0x78, 0xa1, 0xa2, 0x9b, 0xa0, 0x1f, 0x99, 0xef,
	0x89, 0x7a, 0xe1, 0xa0, 0x1b, 0xdd, 0x17, 0xf5, 0x37, 0xfb, 0xe4, 0xc7, 0x7a, 0xd4, 0x07, 0x4d,
	0x47, 0x54, 0xd3, 0xb8, 0xbc, 0x9e, 0xf1, 0xf9, 0x47, 0x00, 0x00, 0x00, 0xff, 0xff, 0x2d, 0xfa,
	0xc5, 0x6a, 0x93, 0x02, 0x00, 0x00,
}
