// Code generated by protoc-gen-go. DO NOT EDIT.
// source: cbws/iam/policy/v1alpha1/policy.proto

package v1alpha1

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Defines an Identity and Access Management (IAM) policy. It is used to
// specify access control policies for Cloud Platform resources.
//
//
// A `Policy` is a collection of `bindings`. A `binding` binds one or more
// `members` to a single `role`. Members can be user accounts, service accounts,
// Google groups, and domains (such as G Suite). A `role` is a named list of
// permissions (defined by IAM or configured by users). A `binding` can
// optionally specify a `condition`, which is a logic expression that further
// constrains the role binding based on attributes about the request and/or
// target resource.
//
// **JSON Example**
//
//     {
//       "bindings": [
//         {
//           "role": "roles/resourcemanager.organizationAdmin",
//           "members": [
//             "user:mike@example.com",
//             "group:admins@example.com",
//             "domain:google.com",
//             "serviceAccount:my-project-id@appspot.gserviceaccount.com"
//           ]
//         },
//         {
//           "role": "roles/resourcemanager.organizationViewer",
//           "members": ["user:eve@example.com"],
//           "condition": {
//             "title": "expirable access",
//             "description": "Does not grant access after Sep 2020",
//             "expression": "request.time <
//             timestamp('2020-10-01T00:00:00.000Z')",
//           }
//         }
//       ]
//     }
//
// **YAML Example**
//
//     bindings:
//     - members:
//       - user:mike@example.com
//       - group:admins@example.com
//       - domain:google.com
//       - serviceAccount:my-project-id@appspot.gserviceaccount.com
//       role: roles/resourcemanager.organizationAdmin
//     - members:
//       - user:eve@example.com
//       role: roles/resourcemanager.organizationViewer
//       condition:
//         title: expirable access
//         description: Does not grant access after Sep 2020
//         expression: request.time < timestamp('2020-10-01T00:00:00.000Z')
//
// For a description of IAM and its features, see the
// [IAM developer's guide](https://cloud.google.com/iam/docs).
type Policy struct {
	// Associates a list of `members` to a `role`. Optionally may specify a
	// `condition` that determines when binding is in effect.
	// `bindings` with no members will result in an error.
	Bindings []*Binding `protobuf:"bytes,4,rep,name=bindings,proto3" json:"bindings,omitempty"`
	// `etag` is used for optimistic concurrency control as a way to help
	// prevent simultaneous updates of a policy from overwriting each other.
	// It is strongly suggested that systems make use of the `etag` in the
	// read-modify-write cycle to perform policy updates in order to avoid race
	// conditions: An `etag` is returned in the response to `getIamPolicy`, and
	// systems are expected to put that etag in the request to `setIamPolicy` to
	// ensure that their change will be applied to the same version of the policy.
	//
	// If no `etag` is provided in the call to `setIamPolicy`, then the existing
	// policy is overwritten. Due to blind-set semantics of an etag-less policy,
	// 'setIamPolicy' will not fail even if the incoming policy version does not
	// meet the requirements for modifying the stored policy.
	Etag                 []byte   `protobuf:"bytes,3,opt,name=etag,proto3" json:"etag,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Policy) Reset()         { *m = Policy{} }
func (m *Policy) String() string { return proto.CompactTextString(m) }
func (*Policy) ProtoMessage()    {}
func (*Policy) Descriptor() ([]byte, []int) {
	return fileDescriptor_0546e693f7a48e0d, []int{0}
}

func (m *Policy) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Policy.Unmarshal(m, b)
}
func (m *Policy) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Policy.Marshal(b, m, deterministic)
}
func (m *Policy) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Policy.Merge(m, src)
}
func (m *Policy) XXX_Size() int {
	return xxx_messageInfo_Policy.Size(m)
}
func (m *Policy) XXX_DiscardUnknown() {
	xxx_messageInfo_Policy.DiscardUnknown(m)
}

var xxx_messageInfo_Policy proto.InternalMessageInfo

func (m *Policy) GetBindings() []*Binding {
	if m != nil {
		return m.Bindings
	}
	return nil
}

func (m *Policy) GetEtag() []byte {
	if m != nil {
		return m.Etag
	}
	return nil
}

// Associates `members` with a `role`.
type Binding struct {
	// Role that is assigned to `members`.
	// For example, `roles/viewer`, `roles/editor`, or `roles/owner`.
	Role        string `protobuf:"bytes,1,opt,name=role,proto3" json:"role,omitempty"`
	Description string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	// Specifies the identities requesting access for a Cloud Platform resource.
	// `members` can have the following values:
	//
	// * `anonymous`: A special identifier that represents anyone who is
	//    on the internet
	//
	// * `allUsers`: A special identifier that represents anyone who is
	//    authenticated with a Cloudbear account or a service account.
	//
	// * `user:{emailid}`: An email address that represents a specific Google
	//    account. For example, `alice@example.com` .
	//
	// * `serviceAccount:{emailid}`: An email address that represents a service
	//    account. For example, `my-other-app@appspot.gserviceaccount.com`.
	//
	// * `group:{emailid}`: An email address that represents a Google group.
	//    For example, `admins@example.com`.
	//
	// * `principal:{id}`: Identifier of the specific principal, can be used if
	//    access to either the user, serviceAccount or group is not available and
	//    only the principal id is known. This member type is only available when
	//    setting a IAM policy and is not returned when getting a IAM policy.
	Members              []string `protobuf:"bytes,2,rep,name=members,proto3" json:"members,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Binding) Reset()         { *m = Binding{} }
func (m *Binding) String() string { return proto.CompactTextString(m) }
func (*Binding) ProtoMessage()    {}
func (*Binding) Descriptor() ([]byte, []int) {
	return fileDescriptor_0546e693f7a48e0d, []int{1}
}

func (m *Binding) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Binding.Unmarshal(m, b)
}
func (m *Binding) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Binding.Marshal(b, m, deterministic)
}
func (m *Binding) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Binding.Merge(m, src)
}
func (m *Binding) XXX_Size() int {
	return xxx_messageInfo_Binding.Size(m)
}
func (m *Binding) XXX_DiscardUnknown() {
	xxx_messageInfo_Binding.DiscardUnknown(m)
}

var xxx_messageInfo_Binding proto.InternalMessageInfo

func (m *Binding) GetRole() string {
	if m != nil {
		return m.Role
	}
	return ""
}

func (m *Binding) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Binding) GetMembers() []string {
	if m != nil {
		return m.Members
	}
	return nil
}

func init() {
	proto.RegisterType((*Policy)(nil), "cbws.iam.policy.v1alpha1.Policy")
	proto.RegisterType((*Binding)(nil), "cbws.iam.policy.v1alpha1.Binding")
}

func init() {
	proto.RegisterFile("cbws/iam/policy/v1alpha1/policy.proto", fileDescriptor_0546e693f7a48e0d)
}

var fileDescriptor_0546e693f7a48e0d = []byte{
	// 218 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x90, 0x31, 0x4f, 0x04, 0x21,
	0x14, 0x84, 0xb3, 0xee, 0xe5, 0xce, 0xe5, 0xac, 0xa8, 0x28, 0xf1, 0x12, 0x13, 0x9a, 0x83, 0x9c,
	0xc6, 0x58, 0xd9, 0xdc, 0x2f, 0x30, 0x74, 0x6a, 0x05, 0x1c, 0x61, 0x5f, 0xb2, 0x2c, 0x04, 0x50,
	0xe3, 0xbf, 0x37, 0x8b, 0xbb, 0xc6, 0x66, 0xab, 0x37, 0x33, 0xef, 0x9b, 0x66, 0xd0, 0x9d, 0xd1,
	0x5f, 0x59, 0x80, 0xf2, 0x22, 0x86, 0x01, 0xcc, 0xb7, 0xf8, 0x3c, 0xa9, 0x21, 0xf6, 0xea, 0x34,
	0x7b, 0x1e, 0x53, 0x28, 0x01, 0x93, 0x09, 0xe3, 0xa0, 0x3c, 0x9f, 0xe3, 0x05, 0x3b, 0xbc, 0xa3,
	0xed, 0x4b, 0x8d, 0xf0, 0x33, 0xba, 0xd6, 0x30, 0x5e, 0x60, 0x74, 0x99, 0x6c, 0x68, 0xcb, 0xf6,
	0xf7, 0xb7, 0x7c, 0xad, 0xc6, 0xcf, 0xbf, 0xa4, 0xfc, 0xab, 0x60, 0x8c, 0x36, 0xb6, 0x28, 0x47,
	0x5a, 0xda, 0xb0, 0x1b, 0x59, 0xf5, 0xe1, 0x15, 0xed, 0x66, 0x70, 0x7a, 0xa7, 0x30, 0x58, 0xd2,
	0xd0, 0x86, 0x75, 0xb2, 0x6a, 0x4c, 0xd1, 0xfe, 0x62, 0xb3, 0x49, 0x10, 0x0b, 0x84, 0xb1, 0x36,
	0x3b, 0xf9, 0x3f, 0xc2, 0x04, 0xed, 0xbc, 0xf5, 0xda, 0xa6, 0x4c, 0xae, 0x68, 0xcb, 0x3a, 0xb9,
	0xd8, 0xf3, 0xd3, 0xdb, 0xa3, 0x83, 0xd2, 0x7f, 0x68, 0x6e, 0x82, 0x17, 0x75, 0x05, 0x17, 0x8e,
	0xd3, 0x3d, 0xba, 0x14, 0x8d, 0x58, 0xdb, 0x45, 0x6f, 0xeb, 0x22, 0x0f, 0x3f, 0x01, 0x00, 0x00,
	0xff, 0xff, 0x70, 0x5d, 0x52, 0xc0, 0x3a, 0x01, 0x00, 0x00,
}
