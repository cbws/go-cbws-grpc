// Code generated by protoc-gen-go. DO NOT EDIT.
// source: cbws/iam/v1alpha1/iam.proto

package v1alpha1

import (
	context "context"
	fmt "fmt"
	_ "github.com/cbws/go-cbws-grpc/cbws/iam/options/v1alpha1"
	v1alpha1 "github.com/cbws/go-cbws-grpc/cbws/iam/policy/v1alpha1"
	proto "github.com/golang/protobuf/proto"
	duration "github.com/golang/protobuf/ptypes/duration"
	empty "github.com/golang/protobuf/ptypes/empty"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// The service account list request.
type ListServiceAccountsRequest struct {
	// Required. The resource name of the project associated with the service
	// accounts, such as `projects/my-project-123`.
	Parent string `protobuf:"bytes,1,opt,name=parent,proto3" json:"parent,omitempty"`
	// Optional limit on the number of service accounts to include in the
	// response. Further accounts can subsequently be obtained by including the
	// [ListServiceAccountsResponse.next_page_token][google.iam.admin.v1.ListServiceAccountsResponse.next_page_token]
	// in a subsequent request.
	PageSize int32 `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	// Optional pagination token returned in an earlier
	// [ListServiceAccountsResponse.next_page_token][google.iam.admin.v1.ListServiceAccountsResponse.next_page_token].
	PageToken            string   `protobuf:"bytes,3,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListServiceAccountsRequest) Reset()         { *m = ListServiceAccountsRequest{} }
func (m *ListServiceAccountsRequest) String() string { return proto.CompactTextString(m) }
func (*ListServiceAccountsRequest) ProtoMessage()    {}
func (*ListServiceAccountsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_825835e6037ce4ce, []int{0}
}

func (m *ListServiceAccountsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListServiceAccountsRequest.Unmarshal(m, b)
}
func (m *ListServiceAccountsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListServiceAccountsRequest.Marshal(b, m, deterministic)
}
func (m *ListServiceAccountsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListServiceAccountsRequest.Merge(m, src)
}
func (m *ListServiceAccountsRequest) XXX_Size() int {
	return xxx_messageInfo_ListServiceAccountsRequest.Size(m)
}
func (m *ListServiceAccountsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListServiceAccountsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListServiceAccountsRequest proto.InternalMessageInfo

func (m *ListServiceAccountsRequest) GetParent() string {
	if m != nil {
		return m.Parent
	}
	return ""
}

func (m *ListServiceAccountsRequest) GetPageSize() int32 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

func (m *ListServiceAccountsRequest) GetPageToken() string {
	if m != nil {
		return m.PageToken
	}
	return ""
}

// The service account list response.
type ListServiceAccountsResponse struct {
	// The list of matching service accounts.
	Accounts []*ServiceAccount `protobuf:"bytes,1,rep,name=accounts,proto3" json:"accounts,omitempty"`
	// To retrieve the next page of results, set
	// [ListServiceAccountsRequest.page_token][google.iam.admin.v1.ListServiceAccountsRequest.page_token]
	// to this value.
	NextPageToken        string   `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListServiceAccountsResponse) Reset()         { *m = ListServiceAccountsResponse{} }
func (m *ListServiceAccountsResponse) String() string { return proto.CompactTextString(m) }
func (*ListServiceAccountsResponse) ProtoMessage()    {}
func (*ListServiceAccountsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_825835e6037ce4ce, []int{1}
}

func (m *ListServiceAccountsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListServiceAccountsResponse.Unmarshal(m, b)
}
func (m *ListServiceAccountsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListServiceAccountsResponse.Marshal(b, m, deterministic)
}
func (m *ListServiceAccountsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListServiceAccountsResponse.Merge(m, src)
}
func (m *ListServiceAccountsResponse) XXX_Size() int {
	return xxx_messageInfo_ListServiceAccountsResponse.Size(m)
}
func (m *ListServiceAccountsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListServiceAccountsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListServiceAccountsResponse proto.InternalMessageInfo

func (m *ListServiceAccountsResponse) GetAccounts() []*ServiceAccount {
	if m != nil {
		return m.Accounts
	}
	return nil
}

func (m *ListServiceAccountsResponse) GetNextPageToken() string {
	if m != nil {
		return m.NextPageToken
	}
	return ""
}

// The service account get request.
type GetServiceAccountRequest struct {
	// Required. The resource name of the service account in the following format:
	// `projects/{PROJECT_ID}/serviceAccounts/{ACCOUNT}`.
	// Using `-` as a wildcard for the `PROJECT_ID` will infer the project from
	// the account. The `ACCOUNT` value can be the `email` address or the
	// `unique_id` of the service account.
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetServiceAccountRequest) Reset()         { *m = GetServiceAccountRequest{} }
func (m *GetServiceAccountRequest) String() string { return proto.CompactTextString(m) }
func (*GetServiceAccountRequest) ProtoMessage()    {}
func (*GetServiceAccountRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_825835e6037ce4ce, []int{2}
}

func (m *GetServiceAccountRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetServiceAccountRequest.Unmarshal(m, b)
}
func (m *GetServiceAccountRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetServiceAccountRequest.Marshal(b, m, deterministic)
}
func (m *GetServiceAccountRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetServiceAccountRequest.Merge(m, src)
}
func (m *GetServiceAccountRequest) XXX_Size() int {
	return xxx_messageInfo_GetServiceAccountRequest.Size(m)
}
func (m *GetServiceAccountRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetServiceAccountRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetServiceAccountRequest proto.InternalMessageInfo

func (m *GetServiceAccountRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type CreateServiceAccountRequest struct {
	// Required. The resource name of the project associated with the service
	// accounts, such as `projects/my-project-123`.
	Parent string `protobuf:"bytes,1,opt,name=parent,proto3" json:"parent,omitempty"`
	// Required. The account id that is used to generate the service account
	// email address and a stable unique id. It is unique within a project,
	// must be 6-30 characters long, and match the regular expression
	// `[a-z]([-a-z0-9]*[a-z0-9])` to comply with RFC1035.
	AccountId string `protobuf:"bytes,2,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	// The [ServiceAccount][google.iam.admin.v1.ServiceAccount] resource to
	// create. Currently, only the following values are user assignable:
	// `display_name` and `description`.
	ServiceAccount       *ServiceAccount `protobuf:"bytes,3,opt,name=service_account,json=serviceAccount,proto3" json:"service_account,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *CreateServiceAccountRequest) Reset()         { *m = CreateServiceAccountRequest{} }
func (m *CreateServiceAccountRequest) String() string { return proto.CompactTextString(m) }
func (*CreateServiceAccountRequest) ProtoMessage()    {}
func (*CreateServiceAccountRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_825835e6037ce4ce, []int{3}
}

func (m *CreateServiceAccountRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateServiceAccountRequest.Unmarshal(m, b)
}
func (m *CreateServiceAccountRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateServiceAccountRequest.Marshal(b, m, deterministic)
}
func (m *CreateServiceAccountRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateServiceAccountRequest.Merge(m, src)
}
func (m *CreateServiceAccountRequest) XXX_Size() int {
	return xxx_messageInfo_CreateServiceAccountRequest.Size(m)
}
func (m *CreateServiceAccountRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateServiceAccountRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateServiceAccountRequest proto.InternalMessageInfo

func (m *CreateServiceAccountRequest) GetParent() string {
	if m != nil {
		return m.Parent
	}
	return ""
}

func (m *CreateServiceAccountRequest) GetAccountId() string {
	if m != nil {
		return m.AccountId
	}
	return ""
}

func (m *CreateServiceAccountRequest) GetServiceAccount() *ServiceAccount {
	if m != nil {
		return m.ServiceAccount
	}
	return nil
}

type UpdateServiceAccountRequest struct {
	// The [ServiceAccount][google.iam.admin.v1.ServiceAccount] resource to
	// create. Currently, only the following values are user assignable:
	// `display_name` and `description`.
	ServiceAccount       *ServiceAccount `protobuf:"bytes,1,opt,name=service_account,json=serviceAccount,proto3" json:"service_account,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *UpdateServiceAccountRequest) Reset()         { *m = UpdateServiceAccountRequest{} }
func (m *UpdateServiceAccountRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateServiceAccountRequest) ProtoMessage()    {}
func (*UpdateServiceAccountRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_825835e6037ce4ce, []int{4}
}

func (m *UpdateServiceAccountRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateServiceAccountRequest.Unmarshal(m, b)
}
func (m *UpdateServiceAccountRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateServiceAccountRequest.Marshal(b, m, deterministic)
}
func (m *UpdateServiceAccountRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateServiceAccountRequest.Merge(m, src)
}
func (m *UpdateServiceAccountRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateServiceAccountRequest.Size(m)
}
func (m *UpdateServiceAccountRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateServiceAccountRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateServiceAccountRequest proto.InternalMessageInfo

func (m *UpdateServiceAccountRequest) GetServiceAccount() *ServiceAccount {
	if m != nil {
		return m.ServiceAccount
	}
	return nil
}

// The service account delete request.
type DeleteServiceAccountRequest struct {
	// Required. The resource name of the service account in the following format:
	// `projects/{PROJECT_ID}/serviceAccounts/{ACCOUNT}`.
	// Using `-` as a wildcard for the `PROJECT_ID` will infer the project from
	// the account. The `ACCOUNT` value can be the `email` address or the
	// `unique_id` of the service account.
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteServiceAccountRequest) Reset()         { *m = DeleteServiceAccountRequest{} }
func (m *DeleteServiceAccountRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteServiceAccountRequest) ProtoMessage()    {}
func (*DeleteServiceAccountRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_825835e6037ce4ce, []int{5}
}

func (m *DeleteServiceAccountRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteServiceAccountRequest.Unmarshal(m, b)
}
func (m *DeleteServiceAccountRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteServiceAccountRequest.Marshal(b, m, deterministic)
}
func (m *DeleteServiceAccountRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteServiceAccountRequest.Merge(m, src)
}
func (m *DeleteServiceAccountRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteServiceAccountRequest.Size(m)
}
func (m *DeleteServiceAccountRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteServiceAccountRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteServiceAccountRequest proto.InternalMessageInfo

func (m *DeleteServiceAccountRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

// The service account keys list request.
type ListServiceAccountKeysRequest struct {
	// Required. The resource name of the service account in the following format:
	// `projects/{PROJECT_ID}/serviceAccounts/{ACCOUNT}`.
	//
	// Using `-` as a wildcard for the `PROJECT_ID`, will infer the project from
	// the account. The `ACCOUNT` value can be the `email` address or the
	// `unique_id` of the service account.
	Parent string `protobuf:"bytes,1,opt,name=parent,proto3" json:"parent,omitempty"`
	// Filters the types of keys the user wants to include in the list
	// response. Duplicate key types are not allowed. If no key type
	// is provided, all keys are returned.
	KeyTypes             []ServiceAccountKeyType `protobuf:"varint,2,rep,packed,name=key_types,json=keyTypes,proto3,enum=cbws.iam.v1alpha1.ServiceAccountKeyType" json:"key_types,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *ListServiceAccountKeysRequest) Reset()         { *m = ListServiceAccountKeysRequest{} }
func (m *ListServiceAccountKeysRequest) String() string { return proto.CompactTextString(m) }
func (*ListServiceAccountKeysRequest) ProtoMessage()    {}
func (*ListServiceAccountKeysRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_825835e6037ce4ce, []int{6}
}

func (m *ListServiceAccountKeysRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListServiceAccountKeysRequest.Unmarshal(m, b)
}
func (m *ListServiceAccountKeysRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListServiceAccountKeysRequest.Marshal(b, m, deterministic)
}
func (m *ListServiceAccountKeysRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListServiceAccountKeysRequest.Merge(m, src)
}
func (m *ListServiceAccountKeysRequest) XXX_Size() int {
	return xxx_messageInfo_ListServiceAccountKeysRequest.Size(m)
}
func (m *ListServiceAccountKeysRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListServiceAccountKeysRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListServiceAccountKeysRequest proto.InternalMessageInfo

func (m *ListServiceAccountKeysRequest) GetParent() string {
	if m != nil {
		return m.Parent
	}
	return ""
}

func (m *ListServiceAccountKeysRequest) GetKeyTypes() []ServiceAccountKeyType {
	if m != nil {
		return m.KeyTypes
	}
	return nil
}

// The service account keys list response.
type ListServiceAccountKeysResponse struct {
	// The public keys for the service account.
	Keys                 []*ServiceAccountKey `protobuf:"bytes,1,rep,name=keys,proto3" json:"keys,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *ListServiceAccountKeysResponse) Reset()         { *m = ListServiceAccountKeysResponse{} }
func (m *ListServiceAccountKeysResponse) String() string { return proto.CompactTextString(m) }
func (*ListServiceAccountKeysResponse) ProtoMessage()    {}
func (*ListServiceAccountKeysResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_825835e6037ce4ce, []int{7}
}

func (m *ListServiceAccountKeysResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListServiceAccountKeysResponse.Unmarshal(m, b)
}
func (m *ListServiceAccountKeysResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListServiceAccountKeysResponse.Marshal(b, m, deterministic)
}
func (m *ListServiceAccountKeysResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListServiceAccountKeysResponse.Merge(m, src)
}
func (m *ListServiceAccountKeysResponse) XXX_Size() int {
	return xxx_messageInfo_ListServiceAccountKeysResponse.Size(m)
}
func (m *ListServiceAccountKeysResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListServiceAccountKeysResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListServiceAccountKeysResponse proto.InternalMessageInfo

func (m *ListServiceAccountKeysResponse) GetKeys() []*ServiceAccountKey {
	if m != nil {
		return m.Keys
	}
	return nil
}

// The service account key get by id request.
type GetServiceAccountKeyRequest struct {
	// Required. The resource name of the service account key in the following format:
	// `projects/{PROJECT_ID}/serviceAccounts/{ACCOUNT}/keys/{key}`.
	//
	// Using `-` as a wildcard for the `PROJECT_ID` will infer the project from
	// the account. The `ACCOUNT` value can be the `email` address or the
	// `unique_id` of the service account.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// The output format of the public key requested.
	// X509_PEM is the default output format.
	PublicKeyType        ServiceAccountPublicKeyType `protobuf:"varint,2,opt,name=public_key_type,json=publicKeyType,proto3,enum=cbws.iam.v1alpha1.ServiceAccountPublicKeyType" json:"public_key_type,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                    `json:"-"`
	XXX_unrecognized     []byte                      `json:"-"`
	XXX_sizecache        int32                       `json:"-"`
}

func (m *GetServiceAccountKeyRequest) Reset()         { *m = GetServiceAccountKeyRequest{} }
func (m *GetServiceAccountKeyRequest) String() string { return proto.CompactTextString(m) }
func (*GetServiceAccountKeyRequest) ProtoMessage()    {}
func (*GetServiceAccountKeyRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_825835e6037ce4ce, []int{8}
}

func (m *GetServiceAccountKeyRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetServiceAccountKeyRequest.Unmarshal(m, b)
}
func (m *GetServiceAccountKeyRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetServiceAccountKeyRequest.Marshal(b, m, deterministic)
}
func (m *GetServiceAccountKeyRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetServiceAccountKeyRequest.Merge(m, src)
}
func (m *GetServiceAccountKeyRequest) XXX_Size() int {
	return xxx_messageInfo_GetServiceAccountKeyRequest.Size(m)
}
func (m *GetServiceAccountKeyRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetServiceAccountKeyRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetServiceAccountKeyRequest proto.InternalMessageInfo

func (m *GetServiceAccountKeyRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *GetServiceAccountKeyRequest) GetPublicKeyType() ServiceAccountPublicKeyType {
	if m != nil {
		return m.PublicKeyType
	}
	return ServiceAccountPublicKeyType_SERVICE_ACCOUNT_PUBLIC_KEY_TYPE_UNSPECIFIED
}

// The service account key create request.
type CreateServiceAccountKeyRequest struct {
	// Required. The resource name of the service account in the following format:
	// `projects/{PROJECT_ID}/serviceAccounts/{ACCOUNT}`.
	// Using `-` as a wildcard for the `PROJECT_ID` will infer the project from
	// the account. The `ACCOUNT` value can be the `email` address or the
	// `unique_id` of the service account.
	Parent string `protobuf:"bytes,1,opt,name=parent,proto3" json:"parent,omitempty"`
	// The output format of the private key. The default value is
	// `TYPE_GOOGLE_CREDENTIALS_FILE`, which is the Google Credentials File
	// format.
	PrivateKeyType ServiceAccountPrivateKeyType `protobuf:"varint,2,opt,name=private_key_type,json=privateKeyType,proto3,enum=cbws.iam.v1alpha1.ServiceAccountPrivateKeyType" json:"private_key_type,omitempty"`
	// Which type of key and algorithm to use for the key.
	// The default is currently a 2K RSA key.  However this may change in the
	// future.
	KeyAlgorithm         ServiceAccountKeyAlgorithm `protobuf:"varint,3,opt,name=key_algorithm,json=keyAlgorithm,proto3,enum=cbws.iam.v1alpha1.ServiceAccountKeyAlgorithm" json:"key_algorithm,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                   `json:"-"`
	XXX_unrecognized     []byte                     `json:"-"`
	XXX_sizecache        int32                      `json:"-"`
}

func (m *CreateServiceAccountKeyRequest) Reset()         { *m = CreateServiceAccountKeyRequest{} }
func (m *CreateServiceAccountKeyRequest) String() string { return proto.CompactTextString(m) }
func (*CreateServiceAccountKeyRequest) ProtoMessage()    {}
func (*CreateServiceAccountKeyRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_825835e6037ce4ce, []int{9}
}

func (m *CreateServiceAccountKeyRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateServiceAccountKeyRequest.Unmarshal(m, b)
}
func (m *CreateServiceAccountKeyRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateServiceAccountKeyRequest.Marshal(b, m, deterministic)
}
func (m *CreateServiceAccountKeyRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateServiceAccountKeyRequest.Merge(m, src)
}
func (m *CreateServiceAccountKeyRequest) XXX_Size() int {
	return xxx_messageInfo_CreateServiceAccountKeyRequest.Size(m)
}
func (m *CreateServiceAccountKeyRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateServiceAccountKeyRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateServiceAccountKeyRequest proto.InternalMessageInfo

func (m *CreateServiceAccountKeyRequest) GetParent() string {
	if m != nil {
		return m.Parent
	}
	return ""
}

func (m *CreateServiceAccountKeyRequest) GetPrivateKeyType() ServiceAccountPrivateKeyType {
	if m != nil {
		return m.PrivateKeyType
	}
	return ServiceAccountPrivateKeyType_SERVICE_ACCOUNT_PRIVATE_KEY_TYPE_UNSPECIFIED
}

func (m *CreateServiceAccountKeyRequest) GetKeyAlgorithm() ServiceAccountKeyAlgorithm {
	if m != nil {
		return m.KeyAlgorithm
	}
	return ServiceAccountKeyAlgorithm_SERVICE_ACCOUNT_KEY_ALGORITHM_UNSPECIFIED
}

// The service account key delete request.
type DeleteServiceAccountKeyRequest struct {
	// Required. The resource name of the service account key in the following format:
	// `projects/{PROJECT_ID}/serviceAccounts/{ACCOUNT}/keys/{key}`.
	// Using `-` as a wildcard for the `PROJECT_ID` will infer the project from
	// the account. The `ACCOUNT` value can be the `email` address or the
	// `unique_id` of the service account.
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteServiceAccountKeyRequest) Reset()         { *m = DeleteServiceAccountKeyRequest{} }
func (m *DeleteServiceAccountKeyRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteServiceAccountKeyRequest) ProtoMessage()    {}
func (*DeleteServiceAccountKeyRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_825835e6037ce4ce, []int{10}
}

func (m *DeleteServiceAccountKeyRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteServiceAccountKeyRequest.Unmarshal(m, b)
}
func (m *DeleteServiceAccountKeyRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteServiceAccountKeyRequest.Marshal(b, m, deterministic)
}
func (m *DeleteServiceAccountKeyRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteServiceAccountKeyRequest.Merge(m, src)
}
func (m *DeleteServiceAccountKeyRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteServiceAccountKeyRequest.Size(m)
}
func (m *DeleteServiceAccountKeyRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteServiceAccountKeyRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteServiceAccountKeyRequest proto.InternalMessageInfo

func (m *DeleteServiceAccountKeyRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type GenerateAccessTokenRequest struct {
	// Required. The resource name of the service account in the following format:
	// `projects/{PROJECT_ID}/serviceAccounts/{ACCOUNT}`.
	// Using `-` as a wildcard for the `PROJECT_ID` will infer the project from
	// the account. The `ACCOUNT` value can be the `email` address or the
	// `unique_id` of the service account.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// The sequence of service accounts in a delegation chain. Each service
	// account must be granted the `roles/iam.serviceAccountTokenCreator` role
	// on its next service account in the chain. The last service account in the
	// chain must be granted the `roles/iam.serviceAccountTokenCreator` role
	// on the service account that is specified in the `name` field of the
	// request.
	//
	// The delegates must have the following format:
	// `projects/-/serviceAccounts/{ACCOUNT_EMAIL_OR_UNIQUEID}`. The `-` wildcard
	// character is required; replacing it with a project ID is invalid.
	Delegates []string `protobuf:"bytes,2,rep,name=delegates,proto3" json:"delegates,omitempty"`
	// Required. Code to identify the scopes to be included in the OAuth 2.0 access token.
	// See https://developers.google.com/identity/protocols/googlescopes for more
	// information.
	// At least one value required.
	Scope []string `protobuf:"bytes,4,rep,name=scope,proto3" json:"scope,omitempty"`
	// The desired lifetime duration of the access token in seconds.
	// Must be set to a value less than or equal to 3600 (1 hour). If a value is
	// not specified, the token's lifetime will be set to a default value of one
	// hour.
	Lifetime             *duration.Duration `protobuf:"bytes,7,opt,name=lifetime,proto3" json:"lifetime,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *GenerateAccessTokenRequest) Reset()         { *m = GenerateAccessTokenRequest{} }
func (m *GenerateAccessTokenRequest) String() string { return proto.CompactTextString(m) }
func (*GenerateAccessTokenRequest) ProtoMessage()    {}
func (*GenerateAccessTokenRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_825835e6037ce4ce, []int{11}
}

func (m *GenerateAccessTokenRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GenerateAccessTokenRequest.Unmarshal(m, b)
}
func (m *GenerateAccessTokenRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GenerateAccessTokenRequest.Marshal(b, m, deterministic)
}
func (m *GenerateAccessTokenRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GenerateAccessTokenRequest.Merge(m, src)
}
func (m *GenerateAccessTokenRequest) XXX_Size() int {
	return xxx_messageInfo_GenerateAccessTokenRequest.Size(m)
}
func (m *GenerateAccessTokenRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GenerateAccessTokenRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GenerateAccessTokenRequest proto.InternalMessageInfo

func (m *GenerateAccessTokenRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *GenerateAccessTokenRequest) GetDelegates() []string {
	if m != nil {
		return m.Delegates
	}
	return nil
}

func (m *GenerateAccessTokenRequest) GetScope() []string {
	if m != nil {
		return m.Scope
	}
	return nil
}

func (m *GenerateAccessTokenRequest) GetLifetime() *duration.Duration {
	if m != nil {
		return m.Lifetime
	}
	return nil
}

type GenerateAccessTokenResponse struct {
	// The OAuth 2.0 access token.
	AccessToken string `protobuf:"bytes,1,opt,name=access_token,json=accessToken,proto3" json:"access_token,omitempty"`
	// Token expiration time.
	// The expiration time is always set.
	ExpireTime           *timestamp.Timestamp `protobuf:"bytes,3,opt,name=expire_time,json=expireTime,proto3" json:"expire_time,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *GenerateAccessTokenResponse) Reset()         { *m = GenerateAccessTokenResponse{} }
func (m *GenerateAccessTokenResponse) String() string { return proto.CompactTextString(m) }
func (*GenerateAccessTokenResponse) ProtoMessage()    {}
func (*GenerateAccessTokenResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_825835e6037ce4ce, []int{12}
}

func (m *GenerateAccessTokenResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GenerateAccessTokenResponse.Unmarshal(m, b)
}
func (m *GenerateAccessTokenResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GenerateAccessTokenResponse.Marshal(b, m, deterministic)
}
func (m *GenerateAccessTokenResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GenerateAccessTokenResponse.Merge(m, src)
}
func (m *GenerateAccessTokenResponse) XXX_Size() int {
	return xxx_messageInfo_GenerateAccessTokenResponse.Size(m)
}
func (m *GenerateAccessTokenResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GenerateAccessTokenResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GenerateAccessTokenResponse proto.InternalMessageInfo

func (m *GenerateAccessTokenResponse) GetAccessToken() string {
	if m != nil {
		return m.AccessToken
	}
	return ""
}

func (m *GenerateAccessTokenResponse) GetExpireTime() *timestamp.Timestamp {
	if m != nil {
		return m.ExpireTime
	}
	return nil
}

func init() {
	proto.RegisterType((*ListServiceAccountsRequest)(nil), "cbws.iam.v1alpha1.ListServiceAccountsRequest")
	proto.RegisterType((*ListServiceAccountsResponse)(nil), "cbws.iam.v1alpha1.ListServiceAccountsResponse")
	proto.RegisterType((*GetServiceAccountRequest)(nil), "cbws.iam.v1alpha1.GetServiceAccountRequest")
	proto.RegisterType((*CreateServiceAccountRequest)(nil), "cbws.iam.v1alpha1.CreateServiceAccountRequest")
	proto.RegisterType((*UpdateServiceAccountRequest)(nil), "cbws.iam.v1alpha1.UpdateServiceAccountRequest")
	proto.RegisterType((*DeleteServiceAccountRequest)(nil), "cbws.iam.v1alpha1.DeleteServiceAccountRequest")
	proto.RegisterType((*ListServiceAccountKeysRequest)(nil), "cbws.iam.v1alpha1.ListServiceAccountKeysRequest")
	proto.RegisterType((*ListServiceAccountKeysResponse)(nil), "cbws.iam.v1alpha1.ListServiceAccountKeysResponse")
	proto.RegisterType((*GetServiceAccountKeyRequest)(nil), "cbws.iam.v1alpha1.GetServiceAccountKeyRequest")
	proto.RegisterType((*CreateServiceAccountKeyRequest)(nil), "cbws.iam.v1alpha1.CreateServiceAccountKeyRequest")
	proto.RegisterType((*DeleteServiceAccountKeyRequest)(nil), "cbws.iam.v1alpha1.DeleteServiceAccountKeyRequest")
	proto.RegisterType((*GenerateAccessTokenRequest)(nil), "cbws.iam.v1alpha1.GenerateAccessTokenRequest")
	proto.RegisterType((*GenerateAccessTokenResponse)(nil), "cbws.iam.v1alpha1.GenerateAccessTokenResponse")
}

func init() {
	proto.RegisterFile("cbws/iam/v1alpha1/iam.proto", fileDescriptor_825835e6037ce4ce)
}

var fileDescriptor_825835e6037ce4ce = []byte{
	// 1420 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x58, 0xcf, 0x6f, 0x1b, 0xc5,
	0x17, 0xd7, 0x38, 0x69, 0xbe, 0xf1, 0x6b, 0xeb, 0x7c, 0x3b, 0x09, 0xad, 0xe3, 0x6d, 0xd2, 0x64,
	0x0b, 0x6d, 0x30, 0xce, 0x6e, 0x13, 0x84, 0xa0, 0x89, 0x2a, 0xb1, 0xfd, 0xa1, 0xa8, 0x94, 0x42,
	0xb4, 0x69, 0x23, 0x51, 0x22, 0x59, 0xeb, 0xf5, 0xd4, 0x59, 0x62, 0x7b, 0x97, 0xdd, 0x75, 0x1a,
	0x07, 0x7a, 0xa9, 0x2a, 0x0e, 0xa8, 0x12, 0x87, 0x4a, 0x1c, 0xb9, 0xf0, 0x17, 0xd0, 0x9e, 0xe0,
	0x88, 0x04, 0x42, 0x15, 0x37, 0x0e, 0x48, 0x3e, 0x55, 0xc0, 0x1f, 0xc0, 0xb9, 0x27, 0x34, 0x33,
	0xbb, 0xf6, 0x7a, 0x3d, 0xeb, 0x6c, 0x28, 0x27, 0x7b, 0xe6, 0xbd, 0x37, 0xf3, 0xf9, 0xbc, 0x79,
	0xbf, 0xb4, 0x20, 0x99, 0x95, 0x7b, 0x9e, 0x6a, 0x19, 0x0d, 0x75, 0x77, 0xc9, 0xa8, 0x3b, 0xdb,
	0xc6, 0x12, 0x5d, 0x28, 0x8e, 0x6b, 0xfb, 0x36, 0x3e, 0x41, 0x85, 0x0a, 0x5d, 0x87, 0xc2, 0xc2,
	0xf9, 0x41, 0x7d, 0x8f, 0xb8, 0xbb, 0x96, 0x49, 0xca, 0x86, 0x69, 0xda, 0xad, 0xa6, 0xcf, 0x6d,
	0x0b, 0xaf, 0x75, 0x15, 0x1d, 0xbb, 0x6e, 0x99, 0xed, 0x9e, 0x3e, 0x5f, 0x07, 0x6a, 0x6a, 0xa2,
	0x9a, 0x4b, 0x3e, 0x6d, 0x11, 0xcf, 0x2f, 0xbb, 0xc4, 0x73, 0xec, 0xa6, 0x47, 0x02, 0x83, 0x1e,
	0x00, 0xdb, 0xf1, 0x2d, 0xbb, 0xe9, 0xf5, 0x2c, 0x82, 0x8d, 0x40, 0xf1, 0x74, 0xcd, 0xb6, 0x6b,
	0x75, 0xa2, 0x1a, 0x8e, 0xa5, 0x1a, 0xcd, 0xa6, 0xed, 0x1b, 0x51, 0xe9, 0xa9, 0x88, 0xd4, 0xac,
	0x5b, 0xa4, 0x8b, 0xfb, 0x4c, 0x44, 0x70, 0xd7, 0x22, 0xf5, 0x6a, 0xb9, 0x42, 0xb6, 0x8d, 0x5d,
	0xcb, 0x76, 0x03, 0x85, 0xe9, 0x88, 0x82, 0x4b, 0x3c, 0xbb, 0xe5, 0x9a, 0x21, 0x36, 0x29, 0x10,
	0xb1, 0x55, 0xa5, 0x75, 0x57, 0x25, 0x0d, 0xc7, 0x0f, 0x99, 0xce, 0xc6, 0x85, 0xd5, 0x96, 0xcb,
	0x20, 0xc5, 0x2e, 0xee, 0xca, 0x7d, 0xab, 0x41, 0x3c, 0xdf, 0x68, 0x38, 0x5c, 0x41, 0x7e, 0x8c,
	0xa0, 0xf0, 0xbe, 0xe5, 0xf9, 0x1b, 0xdc, 0xdf, 0x1a, 0x77, 0xb7, 0xa7, 0x73, 0x3f, 0xe1, 0x8b,
	0x30, 0xe6, 0x18, 0x2e, 0x69, 0xfa, 0x79, 0x34, 0x87, 0x16, 0xb2, 0x97, 0xe7, 0x9f, 0x6b, 0x99,
	0x17, 0x9a, 0x04, 0xd3, 0x8e, 0x6b, 0x7f, 0x42, 0x4c, 0xdf, 0x53, 0xd8, 0x6b, 0xee, 0xb5, 0xf7,
	0xd5, 0x75, 0xbe, 0xa3, 0x07, 0x06, 0x58, 0x82, 0xac, 0x63, 0xd4, 0x48, 0xd9, 0xb3, 0xf6, 0x49,
	0x3e, 0x33, 0x87, 0x16, 0x8e, 0xe8, 0xe3, 0x74, 0x63, 0xc3, 0xda, 0x27, 0x78, 0x06, 0x80, 0x09,
	0x7d, 0x7b, 0x87, 0x34, 0xf3, 0x23, 0xf4, 0x6c, 0x9d, 0xa9, 0xdf, 0xa2, 0x1b, 0xf2, 0x43, 0x04,
	0x92, 0x10, 0x15, 0x7f, 0x35, 0x7c, 0x09, 0xc6, 0x83, 0xc0, 0xf0, 0xf2, 0x68, 0x6e, 0x64, 0xe1,
	0xe8, 0xf2, 0xbc, 0x32, 0x10, 0x56, 0x4a, 0xbf, 0xb5, 0xde, 0x35, 0xc1, 0xe7, 0x60, 0xa2, 0x49,
	0xf6, 0xfc, 0x72, 0x04, 0x42, 0x86, 0x41, 0x38, 0x4e, 0xb7, 0xd7, 0xbb, 0x30, 0x36, 0x20, 0xbf,
	0x46, 0x62, 0x20, 0x42, 0xcf, 0xbc, 0x0d, 0xa3, 0x4d, 0xa3, 0x41, 0x02, 0xbf, 0x9c, 0x65, 0x7e,
	0x99, 0x01, 0x89, 0x02, 0xe8, 0xba, 0x24, 0x66, 0xc9, 0x0c, 0xe4, 0x5f, 0x10, 0x48, 0x57, 0x5c,
	0x62, 0xf8, 0x44, 0x7c, 0xf0, 0x4b, 0xb8, 0x5c, 0x06, 0x08, 0x38, 0x96, 0xad, 0x2a, 0xa7, 0x74,
	0x79, 0xe4, 0xb9, 0x96, 0xd1, 0xb3, 0xc1, 0xf6, 0xf5, 0x2a, 0x7e, 0x0f, 0x26, 0x62, 0xb9, 0xc5,
	0xdc, 0x9f, 0xca, 0x83, 0x39, 0xaf, 0x6f, 0x2d, 0x37, 0x41, 0xba, 0xed, 0x54, 0x13, 0x99, 0x7c,
	0x38, 0x78, 0x15, 0x4a, 0x79, 0x15, 0x87, 0x1d, 0xbf, 0x6f, 0x13, 0xa4, 0xab, 0xa4, 0x4e, 0x92,
	0xee, 0xfb, 0xd7, 0x4f, 0xf2, 0x2d, 0x82, 0x99, 0xc1, 0x70, 0xbb, 0x41, 0xda, 0xdd, 0x3c, 0x58,
	0x8d, 0x3d, 0x4a, 0xaa, 0xc3, 0xc3, 0x67, 0xb9, 0x06, 0xd9, 0x1d, 0xd2, 0x2e, 0xfb, 0x6d, 0x87,
	0x78, 0xf9, 0xcc, 0xdc, 0xc8, 0x42, 0x6e, 0x79, 0xe1, 0x40, 0x0f, 0xdc, 0x20, 0xed, 0x5b, 0x6d,
	0x87, 0xe8, 0xe3, 0x3b, 0xfc, 0x8f, 0x27, 0xdf, 0x81, 0xd9, 0x24, 0x90, 0x41, 0x5a, 0xbc, 0x03,
	0xa3, 0x3b, 0xa4, 0x1d, 0xa6, 0xc4, 0xab, 0x69, 0xee, 0xd0, 0x99, 0x85, 0xfc, 0x1d, 0x02, 0x69,
	0x20, 0xd4, 0xa9, 0x38, 0xe0, 0xbf, 0xd2, 0xe7, 0xda, 0x73, 0x8c, 0xfd, 0x1c, 0xcc, 0x0e, 0x61,
	0xcf, 0xce, 0xa6, 0x36, 0x78, 0x13, 0x26, 0x9c, 0x56, 0xa5, 0x6e, 0x99, 0xe5, 0xd0, 0x0b, 0x2c,
	0x34, 0x73, 0xcb, 0xca, 0x81, 0x00, 0xd7, 0x99, 0x5d, 0xe8, 0x8a, 0xe3, 0x4e, 0x74, 0x29, 0x3f,
	0xca, 0xc0, 0xac, 0x28, 0x91, 0x22, 0xb0, 0x5f, 0xea, 0xd9, 0x3e, 0x82, 0xff, 0x3b, 0xae, 0xb5,
	0x6b, 0xf8, 0x24, 0x0e, 0x5c, 0x3d, 0x18, 0x38, 0x37, 0x0c, 0x91, 0xe7, 0x9c, 0xbe, 0x35, 0xd6,
	0xe1, 0x38, 0x3d, 0xd2, 0xa8, 0xd7, 0x6c, 0xd7, 0xf2, 0xb7, 0x1b, 0x2c, 0x05, 0x73, 0xcb, 0x8b,
	0x69, 0x5e, 0x4c, 0x0b, 0x8d, 0xf4, 0x63, 0x3b, 0x91, 0x95, 0xbc, 0x05, 0xb3, 0xa2, 0xe4, 0xf8,
	0x6f, 0x1e, 0x51, 0xfe, 0x09, 0x41, 0x61, 0x8d, 0x34, 0x89, 0x6b, 0xf8, 0x54, 0x48, 0x3c, 0x8f,
	0x95, 0xc8, 0x97, 0x4d, 0x3d, 0x7c, 0x1a, 0xb2, 0x55, 0x52, 0x27, 0x35, 0xc3, 0x0f, 0x72, 0x23,
	0xab, 0xf7, 0x36, 0xf0, 0x34, 0x1c, 0xf1, 0x4c, 0xdb, 0x21, 0xf9, 0x51, 0x2a, 0xe1, 0x45, 0x81,
	0xef, 0xe0, 0xb7, 0x60, 0xbc, 0x6e, 0xdd, 0x25, 0xb4, 0x9f, 0xe5, 0xff, 0xc7, 0xaa, 0xca, 0xb4,
	0xc2, 0x9b, 0x9d, 0x12, 0x36, 0x3b, 0xe5, 0x6a, 0xd0, 0x0c, 0xf5, 0xae, 0xaa, 0x7c, 0x9f, 0xc6,
	0xb9, 0x80, 0x46, 0x90, 0x41, 0xf3, 0x70, 0xcc, 0x60, 0xdb, 0x41, 0x5b, 0x60, 0x7c, 0xf4, 0xa3,
	0x46, 0x4f, 0x15, 0xaf, 0xc2, 0x51, 0xb2, 0xe7, 0x58, 0x2e, 0x29, 0xb3, 0xbb, 0x79, 0xf1, 0x2c,
	0x0c, 0xdc, 0x7d, 0x2b, 0x6c, 0xb4, 0x3a, 0x70, 0x75, 0xba, 0xb1, 0xfc, 0xcd, 0x24, 0xc0, 0x75,
	0xed, 0x66, 0xe0, 0x0a, 0xfc, 0x2b, 0x82, 0x49, 0x41, 0x9f, 0xc3, 0xa2, 0x40, 0x48, 0xee, 0xd2,
	0x05, 0x25, 0xad, 0x3a, 0x67, 0x29, 0x6f, 0x76, 0x34, 0xe6, 0xfd, 0x07, 0x4f, 0xa5, 0x5c, 0xbf,
	0xce, 0x97, 0x4f, 0xa5, 0xd1, 0xba, 0xe5, 0xf9, 0x0f, 0x7e, 0xfb, 0xeb, 0x71, 0x46, 0xc5, 0x8b,
	0xbd, 0x39, 0xe8, 0x33, 0x9e, 0x15, 0x97, 0xc2, 0x2e, 0xa4, 0x16, 0xef, 0xab, 0x5e, 0x0c, 0xf6,
	0x0f, 0x08, 0x4e, 0x0c, 0x54, 0x11, 0xfc, 0x86, 0x00, 0x5d, 0x52, 0x5b, 0x2d, 0x1c, 0xdc, 0x1a,
	0xe4, 0xdb, 0xc3, 0xd0, 0x8f, 0xd4, 0x88, 0x08, 0x3c, 0xd5, 0x8f, 0x40, 0x8f, 0x23, 0x57, 0x8b,
	0xf7, 0xf1, 0xf7, 0x08, 0xa6, 0x44, 0xe5, 0x04, 0x8b, 0xbc, 0x3b, 0xa4, 0x81, 0xa7, 0xa1, 0xf0,
	0x81, 0x10, 0xfb, 0x98, 0xc9, 0x4e, 0x65, 0xf0, 0x4b, 0xf2, 0x79, 0x75, 0x37, 0x95, 0xd7, 0x57,
	0x50, 0x11, 0xff, 0x8c, 0x60, 0x4a, 0xd4, 0x89, 0x85, 0xd8, 0x87, 0xb4, 0xec, 0x34, 0xd8, 0x3f,
	0x16, 0x63, 0x6f, 0xb1, 0x53, 0x19, 0xf6, 0x8b, 0xcb, 0x1c, 0xfb, 0xc1, 0x4e, 0x5f, 0x89, 0x75,
	0x78, 0xfc, 0x04, 0xc1, 0x94, 0xa8, 0x8a, 0x09, 0x89, 0x0c, 0x99, 0x05, 0x0a, 0x27, 0x07, 0x12,
	0xf2, 0x1a, 0x1d, 0x9b, 0x65, 0x7d, 0x58, 0xf0, 0x8c, 0x55, 0xd9, 0x89, 0x8c, 0xc4, 0xeb, 0xc5,
	0xb4, 0x24, 0xf0, 0x17, 0x19, 0x98, 0x14, 0x14, 0x15, 0x61, 0x16, 0x27, 0xd7, 0x50, 0x61, 0x16,
	0x0f, 0xa9, 0x55, 0xf2, 0x57, 0xa8, 0xa3, 0xcd, 0x50, 0x78, 0xa5, 0x6e, 0xc1, 0x2c, 0xb1, 0xda,
	0x58, 0x0a, 0xab, 0x9d, 0x90, 0xe4, 0x64, 0x6d, 0xf0, 0x4c, 0xc6, 0xf8, 0x5d, 0x79, 0x35, 0xed,
	0xb3, 0x09, 0x8e, 0xa0, 0x61, 0xf8, 0x27, 0x82, 0x93, 0xe2, 0x11, 0x05, 0x5f, 0x48, 0x55, 0xa2,
	0x22, 0x23, 0x57, 0x61, 0xe9, 0x10, 0x16, 0x81, 0x47, 0xaa, 0x1d, 0x2d, 0xc7, 0x1c, 0xd2, 0x1d,
	0xb7, 0x1e, 0x3c, 0x95, 0x4e, 0x0c, 0x18, 0xf4, 0x15, 0xb9, 0x0b, 0x58, 0x11, 0x27, 0x9a, 0x80,
	0xb7, 0x4a, 0x67, 0x25, 0xfc, 0x3b, 0x82, 0x29, 0xd1, 0xac, 0x84, 0x95, 0x34, 0x85, 0xae, 0xd7,
	0x8f, 0x0b, 0xa9, 0x06, 0x34, 0xd9, 0xea, 0x68, 0x53, 0x8c, 0x54, 0x6c, 0x88, 0x4a, 0xa2, 0xd6,
	0xad, 0x80, 0x21, 0xb3, 0x03, 0xdf, 0x93, 0xd1, 0xa2, 0x81, 0xfc, 0x37, 0x82, 0x53, 0x09, 0x13,
	0x15, 0x5e, 0x4a, 0x59, 0x05, 0x0f, 0xcd, 0xef, 0xf3, 0x8e, 0x76, 0x96, 0xf3, 0x8b, 0x0d, 0x5b,
	0xa5, 0xbe, 0x11, 0x29, 0x89, 0x6e, 0xb4, 0x68, 0x2e, 0xc9, 0xa5, 0x94, 0x11, 0xcc, 0x28, 0xd3,
	0x90, 0xfd, 0x11, 0xc1, 0xa9, 0x84, 0xb1, 0x49, 0x48, 0x79, 0xf8, 0x88, 0x95, 0x58, 0x76, 0xb6,
	0x7a, 0x65, 0x47, 0xcc, 0x22, 0x52, 0x79, 0x2e, 0x14, 0x0f, 0xfb, 0x6e, 0x8f, 0x10, 0x64, 0xd7,
	0x88, 0xbf, 0xce, 0x3e, 0x76, 0xe0, 0x62, 0x0f, 0x76, 0xf0, 0x55, 0x24, 0x1a, 0x8d, 0x5c, 0x29,
	0xc4, 0x3b, 0x97, 0xac, 0xcb, 0x15, 0xe5, 0xa5, 0x8e, 0x36, 0x1e, 0x7e, 0x91, 0x60, 0xf0, 0xe6,
	0xe4, 0xd9, 0x48, 0x63, 0x0d, 0x45, 0xb4, 0x26, 0x84, 0x00, 0xbe, 0x46, 0x90, 0xdd, 0x48, 0x03,
	0x67, 0xe3, 0xf0, 0x70, 0x56, 0x3b, 0xda, 0x44, 0x78, 0x67, 0x89, 0xeb, 0x30, 0x54, 0x67, 0x13,
	0x50, 0x79, 0xe1, 0x15, 0x2b, 0xa8, 0x58, 0x98, 0x7f, 0xa6, 0x1d, 0x8b, 0x8e, 0xa4, 0x2f, 0x9e,
	0x48, 0x39, 0xe8, 0xdb, 0xb9, 0xfc, 0x10, 0xc1, 0x2b, 0x7b, 0xed, 0xfd, 0xc1, 0x97, 0x5f, 0x47,
	0x77, 0x94, 0x9a, 0xe5, 0x6f, 0xb7, 0x2a, 0x8a, 0x69, 0x37, 0xf8, 0x17, 0xa6, 0x9a, 0xbd, 0x48,
	0x7f, 0x17, 0x6b, 0xae, 0x63, 0xaa, 0x03, 0xdf, 0xb0, 0x9e, 0x65, 0x4e, 0x5e, 0xa9, 0xdc, 0xf3,
	0xb6, 0xae, 0x6b, 0x37, 0xb7, 0xd6, 0xf4, 0xf5, 0x2b, 0x5b, 0x9b, 0x81, 0xe0, 0x8f, 0xcc, 0x19,
	0xb1, 0x60, 0xeb, 0x26, 0xf1, 0x8d, 0xaa, 0xe1, 0x1b, 0x95, 0x31, 0x16, 0x3f, 0x6f, 0xfe, 0x13,
	0x00, 0x00, 0xff, 0xff, 0xd1, 0x72, 0x00, 0x61, 0x4a, 0x13, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// IAMServiceClient is the client API for IAMService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type IAMServiceClient interface {
	ListServiceAccounts(ctx context.Context, in *ListServiceAccountsRequest, opts ...grpc.CallOption) (*ListServiceAccountsResponse, error)
	GetServiceAccount(ctx context.Context, in *GetServiceAccountRequest, opts ...grpc.CallOption) (*ServiceAccount, error)
	CreateServiceAccount(ctx context.Context, in *CreateServiceAccountRequest, opts ...grpc.CallOption) (*ServiceAccount, error)
	UpdateServiceAccount(ctx context.Context, in *UpdateServiceAccountRequest, opts ...grpc.CallOption) (*ServiceAccount, error)
	// Deletes a [ServiceAccount][google.iam.admin.v1.ServiceAccount].
	DeleteServiceAccount(ctx context.Context, in *DeleteServiceAccountRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	// Generates an OAuth 2.0 access token for a service account.
	GenerateAccessToken(ctx context.Context, in *GenerateAccessTokenRequest, opts ...grpc.CallOption) (*GenerateAccessTokenResponse, error)
	// Lists [ServiceAccountKeys][google.iam.admin.v1.ServiceAccountKey].
	ListServiceAccountKeys(ctx context.Context, in *ListServiceAccountKeysRequest, opts ...grpc.CallOption) (*ListServiceAccountKeysResponse, error)
	// Gets the [ServiceAccountKey][google.iam.admin.v1.ServiceAccountKey]
	// by key id.
	GetServiceAccountKey(ctx context.Context, in *GetServiceAccountKeyRequest, opts ...grpc.CallOption) (*ServiceAccountKey, error)
	// Creates a [ServiceAccountKey][google.iam.admin.v1.ServiceAccountKey]
	// and returns it.
	CreateServiceAccountKey(ctx context.Context, in *CreateServiceAccountKeyRequest, opts ...grpc.CallOption) (*ServiceAccountKey, error)
	// Deletes a [ServiceAccountKey][google.iam.admin.v1.ServiceAccountKey].
	DeleteServiceAccountKey(ctx context.Context, in *DeleteServiceAccountKeyRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	// Returns the Cloud IAM access control policy for a
	// [ServiceAccount][google.iam.admin.v1.ServiceAccount].
	//
	// Note: Service accounts are both
	// [resources and
	// identities](/iam/docs/service-accounts#service_account_permissions). This
	// method treats the service account as a resource. It returns the Cloud IAM
	// policy that reflects what members have access to the service account.
	//
	// This method does not return what resources the service account has access
	// to. To see if a service account has access to a resource, call the
	// `getIamPolicy` method on the target resource. For example, to view grants
	// for a project, call the
	// [projects.getIamPolicy](/resource-manager/reference/rest/v1/projects/getIamPolicy)
	// method.
	GetPolicy(ctx context.Context, in *v1alpha1.GetPolicyRequest, opts ...grpc.CallOption) (*v1alpha1.Policy, error)
	// Sets the Cloud IAM access control policy for a
	// [ServiceAccount][google.iam.admin.v1.ServiceAccount].
	//
	// Note: Service accounts are both
	// [resources and
	// identities](/iam/docs/service-accounts#service_account_permissions). This
	// method treats the service account as a resource. Use it to grant members
	// access to the service account, such as when they need to impersonate it.
	//
	// This method does not grant the service account access to other resources,
	// such as projects. To grant a service account access to resources, include
	// the service account in the Cloud IAM policy for the desired resource, then
	// call the appropriate `setIamPolicy` method on the target resource. For
	// example, to grant a service account access to a project, call the
	// [projects.setIamPolicy](/resource-manager/reference/rest/v1/projects/setIamPolicy)
	// method.
	SetPolicy(ctx context.Context, in *v1alpha1.SetPolicyRequest, opts ...grpc.CallOption) (*v1alpha1.Policy, error)
}

type iAMServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewIAMServiceClient(cc grpc.ClientConnInterface) IAMServiceClient {
	return &iAMServiceClient{cc}
}

func (c *iAMServiceClient) ListServiceAccounts(ctx context.Context, in *ListServiceAccountsRequest, opts ...grpc.CallOption) (*ListServiceAccountsResponse, error) {
	out := new(ListServiceAccountsResponse)
	err := c.cc.Invoke(ctx, "/cbws.iam.v1alpha1.IAMService/ListServiceAccounts", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *iAMServiceClient) GetServiceAccount(ctx context.Context, in *GetServiceAccountRequest, opts ...grpc.CallOption) (*ServiceAccount, error) {
	out := new(ServiceAccount)
	err := c.cc.Invoke(ctx, "/cbws.iam.v1alpha1.IAMService/GetServiceAccount", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *iAMServiceClient) CreateServiceAccount(ctx context.Context, in *CreateServiceAccountRequest, opts ...grpc.CallOption) (*ServiceAccount, error) {
	out := new(ServiceAccount)
	err := c.cc.Invoke(ctx, "/cbws.iam.v1alpha1.IAMService/CreateServiceAccount", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *iAMServiceClient) UpdateServiceAccount(ctx context.Context, in *UpdateServiceAccountRequest, opts ...grpc.CallOption) (*ServiceAccount, error) {
	out := new(ServiceAccount)
	err := c.cc.Invoke(ctx, "/cbws.iam.v1alpha1.IAMService/UpdateServiceAccount", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *iAMServiceClient) DeleteServiceAccount(ctx context.Context, in *DeleteServiceAccountRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/cbws.iam.v1alpha1.IAMService/DeleteServiceAccount", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *iAMServiceClient) GenerateAccessToken(ctx context.Context, in *GenerateAccessTokenRequest, opts ...grpc.CallOption) (*GenerateAccessTokenResponse, error) {
	out := new(GenerateAccessTokenResponse)
	err := c.cc.Invoke(ctx, "/cbws.iam.v1alpha1.IAMService/GenerateAccessToken", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *iAMServiceClient) ListServiceAccountKeys(ctx context.Context, in *ListServiceAccountKeysRequest, opts ...grpc.CallOption) (*ListServiceAccountKeysResponse, error) {
	out := new(ListServiceAccountKeysResponse)
	err := c.cc.Invoke(ctx, "/cbws.iam.v1alpha1.IAMService/ListServiceAccountKeys", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *iAMServiceClient) GetServiceAccountKey(ctx context.Context, in *GetServiceAccountKeyRequest, opts ...grpc.CallOption) (*ServiceAccountKey, error) {
	out := new(ServiceAccountKey)
	err := c.cc.Invoke(ctx, "/cbws.iam.v1alpha1.IAMService/GetServiceAccountKey", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *iAMServiceClient) CreateServiceAccountKey(ctx context.Context, in *CreateServiceAccountKeyRequest, opts ...grpc.CallOption) (*ServiceAccountKey, error) {
	out := new(ServiceAccountKey)
	err := c.cc.Invoke(ctx, "/cbws.iam.v1alpha1.IAMService/CreateServiceAccountKey", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *iAMServiceClient) DeleteServiceAccountKey(ctx context.Context, in *DeleteServiceAccountKeyRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/cbws.iam.v1alpha1.IAMService/DeleteServiceAccountKey", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *iAMServiceClient) GetPolicy(ctx context.Context, in *v1alpha1.GetPolicyRequest, opts ...grpc.CallOption) (*v1alpha1.Policy, error) {
	out := new(v1alpha1.Policy)
	err := c.cc.Invoke(ctx, "/cbws.iam.v1alpha1.IAMService/GetPolicy", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *iAMServiceClient) SetPolicy(ctx context.Context, in *v1alpha1.SetPolicyRequest, opts ...grpc.CallOption) (*v1alpha1.Policy, error) {
	out := new(v1alpha1.Policy)
	err := c.cc.Invoke(ctx, "/cbws.iam.v1alpha1.IAMService/SetPolicy", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// IAMServiceServer is the server API for IAMService service.
type IAMServiceServer interface {
	ListServiceAccounts(context.Context, *ListServiceAccountsRequest) (*ListServiceAccountsResponse, error)
	GetServiceAccount(context.Context, *GetServiceAccountRequest) (*ServiceAccount, error)
	CreateServiceAccount(context.Context, *CreateServiceAccountRequest) (*ServiceAccount, error)
	UpdateServiceAccount(context.Context, *UpdateServiceAccountRequest) (*ServiceAccount, error)
	// Deletes a [ServiceAccount][google.iam.admin.v1.ServiceAccount].
	DeleteServiceAccount(context.Context, *DeleteServiceAccountRequest) (*empty.Empty, error)
	// Generates an OAuth 2.0 access token for a service account.
	GenerateAccessToken(context.Context, *GenerateAccessTokenRequest) (*GenerateAccessTokenResponse, error)
	// Lists [ServiceAccountKeys][google.iam.admin.v1.ServiceAccountKey].
	ListServiceAccountKeys(context.Context, *ListServiceAccountKeysRequest) (*ListServiceAccountKeysResponse, error)
	// Gets the [ServiceAccountKey][google.iam.admin.v1.ServiceAccountKey]
	// by key id.
	GetServiceAccountKey(context.Context, *GetServiceAccountKeyRequest) (*ServiceAccountKey, error)
	// Creates a [ServiceAccountKey][google.iam.admin.v1.ServiceAccountKey]
	// and returns it.
	CreateServiceAccountKey(context.Context, *CreateServiceAccountKeyRequest) (*ServiceAccountKey, error)
	// Deletes a [ServiceAccountKey][google.iam.admin.v1.ServiceAccountKey].
	DeleteServiceAccountKey(context.Context, *DeleteServiceAccountKeyRequest) (*empty.Empty, error)
	// Returns the Cloud IAM access control policy for a
	// [ServiceAccount][google.iam.admin.v1.ServiceAccount].
	//
	// Note: Service accounts are both
	// [resources and
	// identities](/iam/docs/service-accounts#service_account_permissions). This
	// method treats the service account as a resource. It returns the Cloud IAM
	// policy that reflects what members have access to the service account.
	//
	// This method does not return what resources the service account has access
	// to. To see if a service account has access to a resource, call the
	// `getIamPolicy` method on the target resource. For example, to view grants
	// for a project, call the
	// [projects.getIamPolicy](/resource-manager/reference/rest/v1/projects/getIamPolicy)
	// method.
	GetPolicy(context.Context, *v1alpha1.GetPolicyRequest) (*v1alpha1.Policy, error)
	// Sets the Cloud IAM access control policy for a
	// [ServiceAccount][google.iam.admin.v1.ServiceAccount].
	//
	// Note: Service accounts are both
	// [resources and
	// identities](/iam/docs/service-accounts#service_account_permissions). This
	// method treats the service account as a resource. Use it to grant members
	// access to the service account, such as when they need to impersonate it.
	//
	// This method does not grant the service account access to other resources,
	// such as projects. To grant a service account access to resources, include
	// the service account in the Cloud IAM policy for the desired resource, then
	// call the appropriate `setIamPolicy` method on the target resource. For
	// example, to grant a service account access to a project, call the
	// [projects.setIamPolicy](/resource-manager/reference/rest/v1/projects/setIamPolicy)
	// method.
	SetPolicy(context.Context, *v1alpha1.SetPolicyRequest) (*v1alpha1.Policy, error)
}

// UnimplementedIAMServiceServer can be embedded to have forward compatible implementations.
type UnimplementedIAMServiceServer struct {
}

func (*UnimplementedIAMServiceServer) ListServiceAccounts(ctx context.Context, req *ListServiceAccountsRequest) (*ListServiceAccountsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListServiceAccounts not implemented")
}
func (*UnimplementedIAMServiceServer) GetServiceAccount(ctx context.Context, req *GetServiceAccountRequest) (*ServiceAccount, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetServiceAccount not implemented")
}
func (*UnimplementedIAMServiceServer) CreateServiceAccount(ctx context.Context, req *CreateServiceAccountRequest) (*ServiceAccount, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateServiceAccount not implemented")
}
func (*UnimplementedIAMServiceServer) UpdateServiceAccount(ctx context.Context, req *UpdateServiceAccountRequest) (*ServiceAccount, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateServiceAccount not implemented")
}
func (*UnimplementedIAMServiceServer) DeleteServiceAccount(ctx context.Context, req *DeleteServiceAccountRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteServiceAccount not implemented")
}
func (*UnimplementedIAMServiceServer) GenerateAccessToken(ctx context.Context, req *GenerateAccessTokenRequest) (*GenerateAccessTokenResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GenerateAccessToken not implemented")
}
func (*UnimplementedIAMServiceServer) ListServiceAccountKeys(ctx context.Context, req *ListServiceAccountKeysRequest) (*ListServiceAccountKeysResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListServiceAccountKeys not implemented")
}
func (*UnimplementedIAMServiceServer) GetServiceAccountKey(ctx context.Context, req *GetServiceAccountKeyRequest) (*ServiceAccountKey, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetServiceAccountKey not implemented")
}
func (*UnimplementedIAMServiceServer) CreateServiceAccountKey(ctx context.Context, req *CreateServiceAccountKeyRequest) (*ServiceAccountKey, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateServiceAccountKey not implemented")
}
func (*UnimplementedIAMServiceServer) DeleteServiceAccountKey(ctx context.Context, req *DeleteServiceAccountKeyRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteServiceAccountKey not implemented")
}
func (*UnimplementedIAMServiceServer) GetPolicy(ctx context.Context, req *v1alpha1.GetPolicyRequest) (*v1alpha1.Policy, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetPolicy not implemented")
}
func (*UnimplementedIAMServiceServer) SetPolicy(ctx context.Context, req *v1alpha1.SetPolicyRequest) (*v1alpha1.Policy, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetPolicy not implemented")
}

func RegisterIAMServiceServer(s *grpc.Server, srv IAMServiceServer) {
	s.RegisterService(&_IAMService_serviceDesc, srv)
}

func _IAMService_ListServiceAccounts_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListServiceAccountsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IAMServiceServer).ListServiceAccounts(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cbws.iam.v1alpha1.IAMService/ListServiceAccounts",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IAMServiceServer).ListServiceAccounts(ctx, req.(*ListServiceAccountsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _IAMService_GetServiceAccount_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetServiceAccountRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IAMServiceServer).GetServiceAccount(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cbws.iam.v1alpha1.IAMService/GetServiceAccount",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IAMServiceServer).GetServiceAccount(ctx, req.(*GetServiceAccountRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _IAMService_CreateServiceAccount_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateServiceAccountRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IAMServiceServer).CreateServiceAccount(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cbws.iam.v1alpha1.IAMService/CreateServiceAccount",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IAMServiceServer).CreateServiceAccount(ctx, req.(*CreateServiceAccountRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _IAMService_UpdateServiceAccount_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateServiceAccountRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IAMServiceServer).UpdateServiceAccount(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cbws.iam.v1alpha1.IAMService/UpdateServiceAccount",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IAMServiceServer).UpdateServiceAccount(ctx, req.(*UpdateServiceAccountRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _IAMService_DeleteServiceAccount_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteServiceAccountRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IAMServiceServer).DeleteServiceAccount(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cbws.iam.v1alpha1.IAMService/DeleteServiceAccount",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IAMServiceServer).DeleteServiceAccount(ctx, req.(*DeleteServiceAccountRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _IAMService_GenerateAccessToken_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GenerateAccessTokenRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IAMServiceServer).GenerateAccessToken(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cbws.iam.v1alpha1.IAMService/GenerateAccessToken",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IAMServiceServer).GenerateAccessToken(ctx, req.(*GenerateAccessTokenRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _IAMService_ListServiceAccountKeys_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListServiceAccountKeysRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IAMServiceServer).ListServiceAccountKeys(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cbws.iam.v1alpha1.IAMService/ListServiceAccountKeys",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IAMServiceServer).ListServiceAccountKeys(ctx, req.(*ListServiceAccountKeysRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _IAMService_GetServiceAccountKey_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetServiceAccountKeyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IAMServiceServer).GetServiceAccountKey(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cbws.iam.v1alpha1.IAMService/GetServiceAccountKey",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IAMServiceServer).GetServiceAccountKey(ctx, req.(*GetServiceAccountKeyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _IAMService_CreateServiceAccountKey_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateServiceAccountKeyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IAMServiceServer).CreateServiceAccountKey(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cbws.iam.v1alpha1.IAMService/CreateServiceAccountKey",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IAMServiceServer).CreateServiceAccountKey(ctx, req.(*CreateServiceAccountKeyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _IAMService_DeleteServiceAccountKey_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteServiceAccountKeyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IAMServiceServer).DeleteServiceAccountKey(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cbws.iam.v1alpha1.IAMService/DeleteServiceAccountKey",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IAMServiceServer).DeleteServiceAccountKey(ctx, req.(*DeleteServiceAccountKeyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _IAMService_GetPolicy_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(v1alpha1.GetPolicyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IAMServiceServer).GetPolicy(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cbws.iam.v1alpha1.IAMService/GetPolicy",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IAMServiceServer).GetPolicy(ctx, req.(*v1alpha1.GetPolicyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _IAMService_SetPolicy_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(v1alpha1.SetPolicyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IAMServiceServer).SetPolicy(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cbws.iam.v1alpha1.IAMService/SetPolicy",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IAMServiceServer).SetPolicy(ctx, req.(*v1alpha1.SetPolicyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _IAMService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "cbws.iam.v1alpha1.IAMService",
	HandlerType: (*IAMServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ListServiceAccounts",
			Handler:    _IAMService_ListServiceAccounts_Handler,
		},
		{
			MethodName: "GetServiceAccount",
			Handler:    _IAMService_GetServiceAccount_Handler,
		},
		{
			MethodName: "CreateServiceAccount",
			Handler:    _IAMService_CreateServiceAccount_Handler,
		},
		{
			MethodName: "UpdateServiceAccount",
			Handler:    _IAMService_UpdateServiceAccount_Handler,
		},
		{
			MethodName: "DeleteServiceAccount",
			Handler:    _IAMService_DeleteServiceAccount_Handler,
		},
		{
			MethodName: "GenerateAccessToken",
			Handler:    _IAMService_GenerateAccessToken_Handler,
		},
		{
			MethodName: "ListServiceAccountKeys",
			Handler:    _IAMService_ListServiceAccountKeys_Handler,
		},
		{
			MethodName: "GetServiceAccountKey",
			Handler:    _IAMService_GetServiceAccountKey_Handler,
		},
		{
			MethodName: "CreateServiceAccountKey",
			Handler:    _IAMService_CreateServiceAccountKey_Handler,
		},
		{
			MethodName: "DeleteServiceAccountKey",
			Handler:    _IAMService_DeleteServiceAccountKey_Handler,
		},
		{
			MethodName: "GetPolicy",
			Handler:    _IAMService_GetPolicy_Handler,
		},
		{
			MethodName: "SetPolicy",
			Handler:    _IAMService_SetPolicy_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "cbws/iam/v1alpha1/iam.proto",
}
