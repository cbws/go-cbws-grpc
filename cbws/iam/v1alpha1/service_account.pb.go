// Code generated by protoc-gen-go. DO NOT EDIT.
// source: cbws/iam/v1alpha1/service_account.proto

package v1alpha1

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	_ "github.com/golang/protobuf/ptypes/duration"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type ServiceAccountKeyType int32

const (
	// Unspecified key type. The presence of this in the
	// message will immediately result in an error.
	ServiceAccountKeyType_SERVICE_ACCOUNT_KEY_TYPE_UNSPECIFIED ServiceAccountKeyType = 0
	// User-managed keys (managed and rotated by the user).
	ServiceAccountKeyType_SERVICE_ACCOUNT_KEY_TYPE_USER_MANAGED ServiceAccountKeyType = 1
	// System-managed keys (managed and rotated by Cloudbear).
	ServiceAccountKeyType_SERVICE_ACCOUNT_KEY_TYPE_SYSTEM_MANAGED ServiceAccountKeyType = 2
)

var ServiceAccountKeyType_name = map[int32]string{
	0: "SERVICE_ACCOUNT_KEY_TYPE_UNSPECIFIED",
	1: "SERVICE_ACCOUNT_KEY_TYPE_USER_MANAGED",
	2: "SERVICE_ACCOUNT_KEY_TYPE_SYSTEM_MANAGED",
}

var ServiceAccountKeyType_value = map[string]int32{
	"SERVICE_ACCOUNT_KEY_TYPE_UNSPECIFIED":    0,
	"SERVICE_ACCOUNT_KEY_TYPE_USER_MANAGED":   1,
	"SERVICE_ACCOUNT_KEY_TYPE_SYSTEM_MANAGED": 2,
}

func (x ServiceAccountKeyType) String() string {
	return proto.EnumName(ServiceAccountKeyType_name, int32(x))
}

func (ServiceAccountKeyType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_5a0d199cfaf114d8, []int{0}
}

// Supported key algorithms.
type ServiceAccountKeyAlgorithm int32

const (
	// An unspecified key algorithm.
	ServiceAccountKeyAlgorithm_SERVICE_ACCOUNT_KEY_ALGORITHM_UNSPECIFIED ServiceAccountKeyAlgorithm = 0
	// 1k RSA Key.
	ServiceAccountKeyAlgorithm_SERVICE_ACCOUNT_KEY_ALGORITHM_RSA_1024 ServiceAccountKeyAlgorithm = 1
	// 2k RSA Key.
	ServiceAccountKeyAlgorithm_SERVICE_ACCOUNT_KEY_ALGORITHM_RSA_2048 ServiceAccountKeyAlgorithm = 2
	// 4k RSA Key.
	ServiceAccountKeyAlgorithm_SERVICE_ACCOUNT_KEY_ALGORITHM_RSA_4096 ServiceAccountKeyAlgorithm = 3
)

var ServiceAccountKeyAlgorithm_name = map[int32]string{
	0: "SERVICE_ACCOUNT_KEY_ALGORITHM_UNSPECIFIED",
	1: "SERVICE_ACCOUNT_KEY_ALGORITHM_RSA_1024",
	2: "SERVICE_ACCOUNT_KEY_ALGORITHM_RSA_2048",
	3: "SERVICE_ACCOUNT_KEY_ALGORITHM_RSA_4096",
}

var ServiceAccountKeyAlgorithm_value = map[string]int32{
	"SERVICE_ACCOUNT_KEY_ALGORITHM_UNSPECIFIED": 0,
	"SERVICE_ACCOUNT_KEY_ALGORITHM_RSA_1024":    1,
	"SERVICE_ACCOUNT_KEY_ALGORITHM_RSA_2048":    2,
	"SERVICE_ACCOUNT_KEY_ALGORITHM_RSA_4096":    3,
}

func (x ServiceAccountKeyAlgorithm) String() string {
	return proto.EnumName(ServiceAccountKeyAlgorithm_name, int32(x))
}

func (ServiceAccountKeyAlgorithm) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_5a0d199cfaf114d8, []int{1}
}

// Supported public key output formats.
type ServiceAccountPublicKeyType int32

const (
	// Unspecified. Returns nothing here.
	ServiceAccountPublicKeyType_SERVICE_ACCOUNT_PUBLIC_KEY_TYPE_UNSPECIFIED ServiceAccountPublicKeyType = 0
	// X509 PEM format.
	ServiceAccountPublicKeyType_SERVICE_ACCOUNT_PUBLIC_KEY_TYPE_X509_PEM_FILE ServiceAccountPublicKeyType = 1
	// PKCS #8 public key.
	ServiceAccountPublicKeyType_SERVICE_ACCOUNT_PUBLIC_KEY_TYPE_PKCS8_PUBLIC_KEY ServiceAccountPublicKeyType = 2
)

var ServiceAccountPublicKeyType_name = map[int32]string{
	0: "SERVICE_ACCOUNT_PUBLIC_KEY_TYPE_UNSPECIFIED",
	1: "SERVICE_ACCOUNT_PUBLIC_KEY_TYPE_X509_PEM_FILE",
	2: "SERVICE_ACCOUNT_PUBLIC_KEY_TYPE_PKCS8_PUBLIC_KEY",
}

var ServiceAccountPublicKeyType_value = map[string]int32{
	"SERVICE_ACCOUNT_PUBLIC_KEY_TYPE_UNSPECIFIED":      0,
	"SERVICE_ACCOUNT_PUBLIC_KEY_TYPE_X509_PEM_FILE":    1,
	"SERVICE_ACCOUNT_PUBLIC_KEY_TYPE_PKCS8_PUBLIC_KEY": 2,
}

func (x ServiceAccountPublicKeyType) String() string {
	return proto.EnumName(ServiceAccountPublicKeyType_name, int32(x))
}

func (ServiceAccountPublicKeyType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_5a0d199cfaf114d8, []int{2}
}

// Supported private key output formats.
type ServiceAccountPrivateKeyType int32

const (
	// Unspecified. Equivalent to `TYPE_CREDENTIALS_FILE`.
	ServiceAccountPrivateKeyType_SERVICE_ACCOUNT_PRIVATE_KEY_TYPE_UNSPECIFIED ServiceAccountPrivateKeyType = 0
	// PKCS12 format.
	// The password for the PKCS12 file is `notasecret`.
	// For more information, see https://tools.ietf.org/html/rfc7292.
	ServiceAccountPrivateKeyType_SERVICE_ACCOUNT_PRIVATE_KEY_TYPE_PKCS12_FILE ServiceAccountPrivateKeyType = 1
	// Credentials File format.
	ServiceAccountPrivateKeyType_SERVICE_ACCOUNT_PRIVATE_KEY_TYPE_CREDENTIALS_FILE ServiceAccountPrivateKeyType = 2
)

var ServiceAccountPrivateKeyType_name = map[int32]string{
	0: "SERVICE_ACCOUNT_PRIVATE_KEY_TYPE_UNSPECIFIED",
	1: "SERVICE_ACCOUNT_PRIVATE_KEY_TYPE_PKCS12_FILE",
	2: "SERVICE_ACCOUNT_PRIVATE_KEY_TYPE_CREDENTIALS_FILE",
}

var ServiceAccountPrivateKeyType_value = map[string]int32{
	"SERVICE_ACCOUNT_PRIVATE_KEY_TYPE_UNSPECIFIED":      0,
	"SERVICE_ACCOUNT_PRIVATE_KEY_TYPE_PKCS12_FILE":      1,
	"SERVICE_ACCOUNT_PRIVATE_KEY_TYPE_CREDENTIALS_FILE": 2,
}

func (x ServiceAccountPrivateKeyType) String() string {
	return proto.EnumName(ServiceAccountPrivateKeyType_name, int32(x))
}

func (ServiceAccountPrivateKeyType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_5a0d199cfaf114d8, []int{3}
}

type ServiceAccount struct {
	// The resource name of the service account in the following format:
	// `projects/{PROJECT_ID}/serviceAccounts/{ACCOUNT}`.
	//
	// Requests using `-` as a wildcard for the `PROJECT_ID` will infer the
	// project from the `account` and the `ACCOUNT` value can be the `email`
	// address or the `unique_id` of the service account.
	//
	// In responses the resource name will always be in the format
	// `projects/{PROJECT_ID}/serviceAccounts/{ACCOUNT}`.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// @OutputOnly The id of the project that owns the service account.
	ProjectId string `protobuf:"bytes,2,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	// @OutputOnly The unique and stable id of the service account.
	UniqueId string `protobuf:"bytes,4,opt,name=unique_id,json=uniqueId,proto3" json:"unique_id,omitempty"`
	// @OutputOnly The email address of the service account.
	Email string `protobuf:"bytes,5,opt,name=email,proto3" json:"email,omitempty"`
	// Optional. A user-specified name for the service account.
	// Must be less than or equal to 100 UTF-8 bytes.
	DisplayName          string   `protobuf:"bytes,6,opt,name=display_name,json=displayName,proto3" json:"display_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ServiceAccount) Reset()         { *m = ServiceAccount{} }
func (m *ServiceAccount) String() string { return proto.CompactTextString(m) }
func (*ServiceAccount) ProtoMessage()    {}
func (*ServiceAccount) Descriptor() ([]byte, []int) {
	return fileDescriptor_5a0d199cfaf114d8, []int{0}
}

func (m *ServiceAccount) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ServiceAccount.Unmarshal(m, b)
}
func (m *ServiceAccount) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ServiceAccount.Marshal(b, m, deterministic)
}
func (m *ServiceAccount) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ServiceAccount.Merge(m, src)
}
func (m *ServiceAccount) XXX_Size() int {
	return xxx_messageInfo_ServiceAccount.Size(m)
}
func (m *ServiceAccount) XXX_DiscardUnknown() {
	xxx_messageInfo_ServiceAccount.DiscardUnknown(m)
}

var xxx_messageInfo_ServiceAccount proto.InternalMessageInfo

func (m *ServiceAccount) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ServiceAccount) GetProjectId() string {
	if m != nil {
		return m.ProjectId
	}
	return ""
}

func (m *ServiceAccount) GetUniqueId() string {
	if m != nil {
		return m.UniqueId
	}
	return ""
}

func (m *ServiceAccount) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *ServiceAccount) GetDisplayName() string {
	if m != nil {
		return m.DisplayName
	}
	return ""
}

// Represents a service account key.
//
// A service account has two sets of key-pairs: user-managed, and
// system-managed.
//
// User-managed key-pairs can be created and deleted by users.  Users are
// responsible for rotating these keys periodically to ensure security of
// their service accounts.  Users retain the private key of these key-pairs,
// and Cloudbear retains ONLY the public key.
//
// System-managed keys are automatically rotated by Cloudbear, and are used for
// signing for a maximum of two weeks. The rotation process is probabilistic,
// and usage of the new key will gradually ramp up and down over the key's
// lifetime. We recommend caching the public key set for a service account for
// no more than 24 hours to ensure you have access to the latest keys.
//
// Public keys for all service accounts are also published at the OAuth2
// Service Account API.
type ServiceAccountKey struct {
	// The resource name of the service account key in the following format
	// `projects/{PROJECT_ID}/serviceAccounts/{ACCOUNT}/keys/{key}`.
	Name    string                `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	KeyType ServiceAccountKeyType `protobuf:"varint,2,opt,name=key_type,json=keyType,proto3,enum=cbws.iam.v1alpha1.ServiceAccountKeyType" json:"key_type,omitempty"`
	// The output format for the private key.
	// Only provided in `CreateServiceAccountKey` responses, not
	// in `GetServiceAccountKey` or `ListServiceAccountKey` responses.
	//
	// Cloudbear never exposes system-managed private keys, and never retains
	// user-managed private keys.
	PrivateKeyType ServiceAccountPrivateKeyType `protobuf:"varint,3,opt,name=private_key_type,json=privateKeyType,proto3,enum=cbws.iam.v1alpha1.ServiceAccountPrivateKeyType" json:"private_key_type,omitempty"`
	// Specifies the algorithm (and possibly key size) for the key.
	KeyAlgorithm ServiceAccountKeyAlgorithm `protobuf:"varint,4,opt,name=key_algorithm,json=keyAlgorithm,proto3,enum=cbws.iam.v1alpha1.ServiceAccountKeyAlgorithm" json:"key_algorithm,omitempty"`
	// The private key data. Only provided in `CreateServiceAccountKey`
	// responses. Make sure to keep the private key data secure because it
	// allows for the assertion of the service account identity.
	// When base64 decoded, the private key data can be used to authenticate with
	// Cloudbear API client libraries and with
	// <a href="/sdk/gcloud/reference/auth/activate-service-account">gcloud
	// auth activate-service-account</a>.
	PrivateKeyData []byte `protobuf:"bytes,5,opt,name=private_key_data,json=privateKeyData,proto3" json:"private_key_data,omitempty"`
	// The public key data. Only provided in `GetServiceAccountKey` responses.
	PublicKeyData []byte `protobuf:"bytes,6,opt,name=public_key_data,json=publicKeyData,proto3" json:"public_key_data,omitempty"`
	// The key can be used after this timestamp.
	ValidAfterTime *timestamp.Timestamp `protobuf:"bytes,7,opt,name=valid_after_time,json=validAfterTime,proto3" json:"valid_after_time,omitempty"`
	// The key can be used before this timestamp.
	// For system-managed key pairs, this timestamp is the end time for the
	// private key signing operation. The public key could still be used
	// for verification for a few hours after this time.
	ValidBeforeTime      *timestamp.Timestamp `protobuf:"bytes,8,opt,name=valid_before_time,json=validBeforeTime,proto3" json:"valid_before_time,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *ServiceAccountKey) Reset()         { *m = ServiceAccountKey{} }
func (m *ServiceAccountKey) String() string { return proto.CompactTextString(m) }
func (*ServiceAccountKey) ProtoMessage()    {}
func (*ServiceAccountKey) Descriptor() ([]byte, []int) {
	return fileDescriptor_5a0d199cfaf114d8, []int{1}
}

func (m *ServiceAccountKey) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ServiceAccountKey.Unmarshal(m, b)
}
func (m *ServiceAccountKey) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ServiceAccountKey.Marshal(b, m, deterministic)
}
func (m *ServiceAccountKey) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ServiceAccountKey.Merge(m, src)
}
func (m *ServiceAccountKey) XXX_Size() int {
	return xxx_messageInfo_ServiceAccountKey.Size(m)
}
func (m *ServiceAccountKey) XXX_DiscardUnknown() {
	xxx_messageInfo_ServiceAccountKey.DiscardUnknown(m)
}

var xxx_messageInfo_ServiceAccountKey proto.InternalMessageInfo

func (m *ServiceAccountKey) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ServiceAccountKey) GetKeyType() ServiceAccountKeyType {
	if m != nil {
		return m.KeyType
	}
	return ServiceAccountKeyType_SERVICE_ACCOUNT_KEY_TYPE_UNSPECIFIED
}

func (m *ServiceAccountKey) GetPrivateKeyType() ServiceAccountPrivateKeyType {
	if m != nil {
		return m.PrivateKeyType
	}
	return ServiceAccountPrivateKeyType_SERVICE_ACCOUNT_PRIVATE_KEY_TYPE_UNSPECIFIED
}

func (m *ServiceAccountKey) GetKeyAlgorithm() ServiceAccountKeyAlgorithm {
	if m != nil {
		return m.KeyAlgorithm
	}
	return ServiceAccountKeyAlgorithm_SERVICE_ACCOUNT_KEY_ALGORITHM_UNSPECIFIED
}

func (m *ServiceAccountKey) GetPrivateKeyData() []byte {
	if m != nil {
		return m.PrivateKeyData
	}
	return nil
}

func (m *ServiceAccountKey) GetPublicKeyData() []byte {
	if m != nil {
		return m.PublicKeyData
	}
	return nil
}

func (m *ServiceAccountKey) GetValidAfterTime() *timestamp.Timestamp {
	if m != nil {
		return m.ValidAfterTime
	}
	return nil
}

func (m *ServiceAccountKey) GetValidBeforeTime() *timestamp.Timestamp {
	if m != nil {
		return m.ValidBeforeTime
	}
	return nil
}

func init() {
	proto.RegisterEnum("cbws.iam.v1alpha1.ServiceAccountKeyType", ServiceAccountKeyType_name, ServiceAccountKeyType_value)
	proto.RegisterEnum("cbws.iam.v1alpha1.ServiceAccountKeyAlgorithm", ServiceAccountKeyAlgorithm_name, ServiceAccountKeyAlgorithm_value)
	proto.RegisterEnum("cbws.iam.v1alpha1.ServiceAccountPublicKeyType", ServiceAccountPublicKeyType_name, ServiceAccountPublicKeyType_value)
	proto.RegisterEnum("cbws.iam.v1alpha1.ServiceAccountPrivateKeyType", ServiceAccountPrivateKeyType_name, ServiceAccountPrivateKeyType_value)
	proto.RegisterType((*ServiceAccount)(nil), "cbws.iam.v1alpha1.ServiceAccount")
	proto.RegisterType((*ServiceAccountKey)(nil), "cbws.iam.v1alpha1.ServiceAccountKey")
}

func init() {
	proto.RegisterFile("cbws/iam/v1alpha1/service_account.proto", fileDescriptor_5a0d199cfaf114d8)
}

var fileDescriptor_5a0d199cfaf114d8 = []byte{
	// 763 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x55, 0xdd, 0x4e, 0xdb, 0x48,
	0x18, 0x5d, 0x87, 0xff, 0x01, 0x82, 0x19, 0xed, 0x4a, 0xd9, 0xb0, 0xcb, 0xb2, 0x68, 0x17, 0x42,
	0x68, 0xec, 0x24, 0x0d, 0x15, 0x70, 0x53, 0x19, 0xc7, 0x50, 0x8b, 0x24, 0x44, 0xb6, 0x41, 0x4d,
	0x6f, 0xac, 0x89, 0x3d, 0x04, 0x37, 0x71, 0xec, 0xfa, 0x27, 0xad, 0x8b, 0x78, 0x90, 0x3e, 0x49,
	0xd5, 0xa7, 0xe8, 0x33, 0xf4, 0x96, 0xbb, 0xbe, 0x41, 0xe5, 0x71, 0x4c, 0x21, 0x21, 0x24, 0xea,
	0x95, 0x67, 0xbe, 0xef, 0x9c, 0xe3, 0xe3, 0xcf, 0x67, 0x34, 0x60, 0x5b, 0x6b, 0xbe, 0x77, 0x59,
	0x03, 0x99, 0x6c, 0xaf, 0x80, 0x3a, 0xf6, 0x15, 0x2a, 0xb0, 0x2e, 0x76, 0x7a, 0x86, 0x86, 0x55,
	0xa4, 0x69, 0x96, 0xdf, 0xf5, 0x18, 0xdb, 0xb1, 0x3c, 0x0b, 0xae, 0x86, 0x40, 0xc6, 0x40, 0x26,
	0x13, 0x03, 0xd3, 0x7f, 0xb6, 0x2c, 0xab, 0xd5, 0xc1, 0x2c, 0xb2, 0x0d, 0xd6, 0xc1, 0xae, 0xe5,
	0x3b, 0x1a, 0x8e, 0xd0, 0xe9, 0xf5, 0x7e, 0x8b, 0xec, 0x9a, 0xfe, 0x25, 0xab, 0xfb, 0x0e, 0xf2,
	0x0c, 0xab, 0xdb, 0xef, 0xff, 0x33, 0xd8, 0xf7, 0x0c, 0x13, 0xbb, 0x1e, 0x32, 0xed, 0x08, 0xb0,
	0xf9, 0x9d, 0x02, 0x49, 0x39, 0x32, 0xc2, 0x45, 0x3e, 0x20, 0x04, 0xd3, 0x5d, 0x64, 0xe2, 0x14,
	0xb5, 0x41, 0x65, 0x16, 0x24, 0xb2, 0x86, 0x7f, 0x03, 0x60, 0x3b, 0xd6, 0x5b, 0xac, 0x79, 0xaa,
	0xa1, 0xa7, 0x12, 0xa4, 0xb3, 0xd0, 0xaf, 0x88, 0x3a, 0x5c, 0x03, 0x0b, 0x7e, 0xd7, 0x78, 0xe7,
	0xe3, 0xb0, 0x3b, 0x4d, 0xba, 0xf3, 0x51, 0x41, 0xd4, 0xe1, 0xef, 0x60, 0x06, 0x9b, 0xc8, 0xe8,
	0xa4, 0x66, 0x48, 0x23, 0xda, 0xc0, 0x7f, 0xc1, 0x92, 0x6e, 0xb8, 0x76, 0x07, 0x05, 0x2a, 0x79,
	0xdb, 0x2c, 0x69, 0x2e, 0xf6, 0x6b, 0x35, 0x64, 0xe2, 0xc3, 0x8b, 0x5b, 0x4e, 0x06, 0x6b, 0xe1,
	0x28, 0xc8, 0x4c, 0x3e, 0x04, 0x1f, 0xd9, 0x01, 0xab, 0xa5, 0xbe, 0x05, 0x97, 0xbd, 0xee, 0xaf,
	0x6e, 0xe2, 0xb1, 0xf6, 0x21, 0x2e, 0x7b, 0x3d, 0x30, 0xe7, 0x9b, 0xcd, 0x6f, 0xd3, 0x60, 0xf5,
	0xa1, 0xd0, 0x29, 0x0e, 0x1e, 0xfd, 0x6c, 0x1e, 0xcc, 0xb7, 0x71, 0xa0, 0x7a, 0x81, 0x8d, 0xc9,
	0x47, 0x27, 0x8b, 0x19, 0x66, 0xe8, 0xff, 0x30, 0x43, 0x5a, 0x4a, 0x60, 0x63, 0x69, 0xae, 0x1d,
	0x2d, 0x60, 0x03, 0xd0, 0xb6, 0x63, 0xf4, 0x90, 0x87, 0xd5, 0x3b, 0xb1, 0x29, 0x22, 0xc6, 0x8e,
	0x15, 0xab, 0x47, 0xc4, 0x58, 0x33, 0x69, 0x3f, 0xd8, 0x43, 0x09, 0x2c, 0x87, 0x92, 0xa8, 0xd3,
	0xb2, 0x1c, 0xc3, 0xbb, 0x32, 0xc9, 0xec, 0x93, 0xc5, 0xdc, 0x24, 0x26, 0xb9, 0x98, 0x24, 0x2d,
	0xb5, 0xef, 0xed, 0x60, 0xe6, 0xa1, 0x5d, 0x1d, 0x79, 0x88, 0xfc, 0xb9, 0xa5, 0xfb, 0x6f, 0x2f,
	0x23, 0x0f, 0xc1, 0x2d, 0xb0, 0x62, 0xfb, 0xcd, 0x8e, 0xa1, 0xfd, 0x04, 0xce, 0x12, 0xe0, 0x72,
	0x54, 0x8e, 0x71, 0x65, 0x40, 0xf7, 0x50, 0xc7, 0xd0, 0x55, 0x74, 0xe9, 0x61, 0x47, 0x0d, 0x23,
	0x98, 0x9a, 0xdb, 0xa0, 0x32, 0x8b, 0xc5, 0x34, 0x13, 0xe5, 0x93, 0x89, 0xf3, 0xc9, 0x28, 0x71,
	0x3e, 0xa5, 0x24, 0xe1, 0x70, 0x21, 0x25, 0x2c, 0xc2, 0x63, 0xb0, 0x1a, 0xa9, 0x34, 0xf1, 0xa5,
	0xe5, 0xe0, 0x48, 0x66, 0x7e, 0xac, 0xcc, 0x0a, 0x21, 0x1d, 0x11, 0x4e, 0x58, 0x3d, 0xd4, 0x6f,
	0x39, 0x04, 0xd6, 0x9f, 0x48, 0x55, 0x18, 0x86, 0x97, 0xbf, 0x12, 0x2c, 0xb6, 0x8d, 0x03, 0x97,
	0xbd, 0x6e, 0xe3, 0xe0, 0x26, 0xfb, 0x89, 0x02, 0x7f, 0x3c, 0x9a, 0x0b, 0x98, 0x01, 0xff, 0xc9,
	0x82, 0x74, 0x21, 0xf2, 0x82, 0xca, 0xf1, 0xfc, 0xd9, 0x79, 0x4d, 0x51, 0x4f, 0x85, 0x86, 0xaa,
	0x34, 0xea, 0x82, 0x7a, 0x5e, 0x93, 0xeb, 0x02, 0x2f, 0x1e, 0x8b, 0x42, 0x99, 0xfe, 0x0d, 0xee,
	0x80, 0xff, 0x47, 0x23, 0x65, 0x41, 0x52, 0xab, 0x5c, 0x8d, 0x3b, 0x11, 0xca, 0x34, 0x05, 0x77,
	0xc1, 0xf6, 0x48, 0xa8, 0xdc, 0x90, 0x15, 0xa1, 0x7a, 0x07, 0x4e, 0x64, 0xbf, 0x52, 0x20, 0x3d,
	0x3a, 0x0e, 0x30, 0x07, 0x76, 0x1e, 0xd3, 0xe2, 0x2a, 0x27, 0x67, 0x92, 0xa8, 0xbc, 0xaa, 0x0e,
	0xb8, 0xcc, 0x82, 0xad, 0xa7, 0xe1, 0x92, 0xcc, 0xa9, 0x85, 0x7c, 0xb1, 0x44, 0x53, 0x93, 0x61,
	0x8b, 0xf9, 0xd2, 0x3e, 0x9d, 0x98, 0x0c, 0x5b, 0xca, 0x1f, 0xbc, 0xa0, 0xa7, 0xb2, 0x9f, 0x29,
	0xb0, 0x36, 0x70, 0x70, 0xe2, 0x04, 0x92, 0x99, 0xb3, 0x60, 0x77, 0x50, 0xab, 0x7e, 0x7e, 0x54,
	0x11, 0xf9, 0x51, 0xa3, 0x2f, 0x80, 0xdc, 0x38, 0xc2, 0xeb, 0xbd, 0xfc, 0x81, 0x5a, 0x17, 0xaa,
	0xea, 0xb1, 0x58, 0x11, 0x68, 0x0a, 0x96, 0x40, 0x7e, 0x1c, 0xa5, 0x7e, 0xca, 0xcb, 0xfb, 0xf7,
	0xaa, 0x74, 0x22, 0xfb, 0x85, 0x02, 0x7f, 0x3d, 0x75, 0xe4, 0x61, 0x1e, 0x3c, 0x1b, 0x92, 0x95,
	0xc4, 0x0b, 0x4e, 0x11, 0x46, 0x79, 0x9f, 0x84, 0x11, 0x3a, 0x29, 0x14, 0x63, 0xeb, 0x7b, 0xa0,
	0x30, 0x96, 0xc1, 0x4b, 0x42, 0x59, 0xa8, 0x29, 0x22, 0x57, 0x91, 0x23, 0x5a, 0xe2, 0x28, 0xff,
	0x86, 0x69, 0x19, 0xde, 0x95, 0xdf, 0x64, 0x34, 0xcb, 0x64, 0xc9, 0x05, 0xd7, 0xb2, 0x72, 0xe1,
	0x33, 0xd7, 0x72, 0x6c, 0x8d, 0x1d, 0xba, 0xf2, 0x9a, 0xb3, 0xe4, 0x80, 0x3e, 0xff, 0x11, 0x00,
	0x00, 0xff, 0xff, 0x22, 0x88, 0x87, 0x92, 0x0e, 0x07, 0x00, 0x00,
}
