// Code generated by protoc-gen-go. DO NOT EDIT.
// source: cbws/projects/v1alpha1/projects.proto

package v1alpha1

import (
	context "context"
	fmt "fmt"
	_ "github.com/cbws/go-cbws-grpc/cbws/iam/options/v1alpha1"
	v1alpha1 "github.com/cbws/go-cbws-grpc/cbws/iam/policy/v1alpha1"
	proto "github.com/golang/protobuf/proto"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	longrunning "google.golang.org/genproto/googleapis/longrunning"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type CreateProjectRequest struct {
	Parent string `protobuf:"bytes,1,opt,name=parent,proto3" json:"parent,omitempty"`
	// Required. The name of the project, It is globally unique across CBWS,
	// must be 6-30 characters long, and match the regular expression
	// `[a-z]([-a-z0-9]*[a-z0-9])` to comply with RFC1035.
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// The [Project][cbws.projects.v1alpha1.Project] resource to
	// create. Currently, only the following values are user assignable:
	// `display_name`.
	Project              *Project `protobuf:"bytes,3,opt,name=project,proto3" json:"project,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateProjectRequest) Reset()         { *m = CreateProjectRequest{} }
func (m *CreateProjectRequest) String() string { return proto.CompactTextString(m) }
func (*CreateProjectRequest) ProtoMessage()    {}
func (*CreateProjectRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_684fe959fd174b3c, []int{0}
}

func (m *CreateProjectRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateProjectRequest.Unmarshal(m, b)
}
func (m *CreateProjectRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateProjectRequest.Marshal(b, m, deterministic)
}
func (m *CreateProjectRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateProjectRequest.Merge(m, src)
}
func (m *CreateProjectRequest) XXX_Size() int {
	return xxx_messageInfo_CreateProjectRequest.Size(m)
}
func (m *CreateProjectRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateProjectRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateProjectRequest proto.InternalMessageInfo

func (m *CreateProjectRequest) GetParent() string {
	if m != nil {
		return m.Parent
	}
	return ""
}

func (m *CreateProjectRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *CreateProjectRequest) GetProject() *Project {
	if m != nil {
		return m.Project
	}
	return nil
}

// The service account list request.
type ListProjectsRequest struct {
	// Optional limit on the number of service accounts to include in the
	// response. Further accounts can subsequently be obtained by including the
	// [ListServiceAccountsResponse.next_page_token][google.iam.admin.v1.ListServiceAccountsResponse.next_page_token]
	// in a subsequent request.
	PageSize int32 `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	// Optional pagination token returned in an earlier
	// [ListServiceAccountsResponse.next_page_token][google.iam.admin.v1.ListServiceAccountsResponse.next_page_token].
	PageToken            string   `protobuf:"bytes,3,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListProjectsRequest) Reset()         { *m = ListProjectsRequest{} }
func (m *ListProjectsRequest) String() string { return proto.CompactTextString(m) }
func (*ListProjectsRequest) ProtoMessage()    {}
func (*ListProjectsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_684fe959fd174b3c, []int{1}
}

func (m *ListProjectsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListProjectsRequest.Unmarshal(m, b)
}
func (m *ListProjectsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListProjectsRequest.Marshal(b, m, deterministic)
}
func (m *ListProjectsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListProjectsRequest.Merge(m, src)
}
func (m *ListProjectsRequest) XXX_Size() int {
	return xxx_messageInfo_ListProjectsRequest.Size(m)
}
func (m *ListProjectsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListProjectsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListProjectsRequest proto.InternalMessageInfo

func (m *ListProjectsRequest) GetPageSize() int32 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

func (m *ListProjectsRequest) GetPageToken() string {
	if m != nil {
		return m.PageToken
	}
	return ""
}

type ListProjectsResponse struct {
	Projects []*Project `protobuf:"bytes,1,rep,name=projects,proto3" json:"projects,omitempty"`
	// To retrieve the next page of results, set
	// [ListServiceAccountsRequest.page_token][google.iam.admin.v1.ListServiceAccountsRequest.page_token]
	// to this value.
	NextPageToken        string   `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListProjectsResponse) Reset()         { *m = ListProjectsResponse{} }
func (m *ListProjectsResponse) String() string { return proto.CompactTextString(m) }
func (*ListProjectsResponse) ProtoMessage()    {}
func (*ListProjectsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_684fe959fd174b3c, []int{2}
}

func (m *ListProjectsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListProjectsResponse.Unmarshal(m, b)
}
func (m *ListProjectsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListProjectsResponse.Marshal(b, m, deterministic)
}
func (m *ListProjectsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListProjectsResponse.Merge(m, src)
}
func (m *ListProjectsResponse) XXX_Size() int {
	return xxx_messageInfo_ListProjectsResponse.Size(m)
}
func (m *ListProjectsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListProjectsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListProjectsResponse proto.InternalMessageInfo

func (m *ListProjectsResponse) GetProjects() []*Project {
	if m != nil {
		return m.Projects
	}
	return nil
}

func (m *ListProjectsResponse) GetNextPageToken() string {
	if m != nil {
		return m.NextPageToken
	}
	return ""
}

type GetProjectRequest struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetProjectRequest) Reset()         { *m = GetProjectRequest{} }
func (m *GetProjectRequest) String() string { return proto.CompactTextString(m) }
func (*GetProjectRequest) ProtoMessage()    {}
func (*GetProjectRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_684fe959fd174b3c, []int{3}
}

func (m *GetProjectRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetProjectRequest.Unmarshal(m, b)
}
func (m *GetProjectRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetProjectRequest.Marshal(b, m, deterministic)
}
func (m *GetProjectRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetProjectRequest.Merge(m, src)
}
func (m *GetProjectRequest) XXX_Size() int {
	return xxx_messageInfo_GetProjectRequest.Size(m)
}
func (m *GetProjectRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetProjectRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetProjectRequest proto.InternalMessageInfo

func (m *GetProjectRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

// The project delete request.
type DeleteProjectRequest struct {
	// The name of the project in format projects/project-name
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteProjectRequest) Reset()         { *m = DeleteProjectRequest{} }
func (m *DeleteProjectRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteProjectRequest) ProtoMessage()    {}
func (*DeleteProjectRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_684fe959fd174b3c, []int{4}
}

func (m *DeleteProjectRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteProjectRequest.Unmarshal(m, b)
}
func (m *DeleteProjectRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteProjectRequest.Marshal(b, m, deterministic)
}
func (m *DeleteProjectRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteProjectRequest.Merge(m, src)
}
func (m *DeleteProjectRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteProjectRequest.Size(m)
}
func (m *DeleteProjectRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteProjectRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteProjectRequest proto.InternalMessageInfo

func (m *DeleteProjectRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type DeleteProjectMetadata struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteProjectMetadata) Reset()         { *m = DeleteProjectMetadata{} }
func (m *DeleteProjectMetadata) String() string { return proto.CompactTextString(m) }
func (*DeleteProjectMetadata) ProtoMessage()    {}
func (*DeleteProjectMetadata) Descriptor() ([]byte, []int) {
	return fileDescriptor_684fe959fd174b3c, []int{5}
}

func (m *DeleteProjectMetadata) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteProjectMetadata.Unmarshal(m, b)
}
func (m *DeleteProjectMetadata) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteProjectMetadata.Marshal(b, m, deterministic)
}
func (m *DeleteProjectMetadata) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteProjectMetadata.Merge(m, src)
}
func (m *DeleteProjectMetadata) XXX_Size() int {
	return xxx_messageInfo_DeleteProjectMetadata.Size(m)
}
func (m *DeleteProjectMetadata) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteProjectMetadata.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteProjectMetadata proto.InternalMessageInfo

func init() {
	proto.RegisterType((*CreateProjectRequest)(nil), "cbws.projects.v1alpha1.CreateProjectRequest")
	proto.RegisterType((*ListProjectsRequest)(nil), "cbws.projects.v1alpha1.ListProjectsRequest")
	proto.RegisterType((*ListProjectsResponse)(nil), "cbws.projects.v1alpha1.ListProjectsResponse")
	proto.RegisterType((*GetProjectRequest)(nil), "cbws.projects.v1alpha1.GetProjectRequest")
	proto.RegisterType((*DeleteProjectRequest)(nil), "cbws.projects.v1alpha1.DeleteProjectRequest")
	proto.RegisterType((*DeleteProjectMetadata)(nil), "cbws.projects.v1alpha1.DeleteProjectMetadata")
}

func init() {
	proto.RegisterFile("cbws/projects/v1alpha1/projects.proto", fileDescriptor_684fe959fd174b3c)
}

var fileDescriptor_684fe959fd174b3c = []byte{
	// 877 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x56, 0x4f, 0x6f, 0x1b, 0x45,
	0x14, 0xd7, 0x38, 0x90, 0xc6, 0x03, 0x51, 0xd4, 0xa9, 0x4b, 0x52, 0x9b, 0x50, 0x77, 0x9b, 0xd2,
	0xc6, 0x75, 0x77, 0x71, 0x2a, 0x0e, 0xa4, 0x70, 0xd8, 0x86, 0x12, 0x09, 0x51, 0xd5, 0xd8, 0x15,
	0x07, 0x64, 0xc9, 0x1a, 0xaf, 0xa7, 0x9b, 0x81, 0xf5, 0xce, 0x32, 0x3b, 0x4e, 0x63, 0x57, 0xbd,
	0xf4, 0x82, 0x84, 0x7a, 0x02, 0xa9, 0xe2, 0x73, 0x90, 0x3b, 0x1f, 0x20, 0x12, 0x27, 0x6e, 0x3e,
	0x55, 0x08, 0xf1, 0x21, 0x7a, 0x42, 0x3b, 0x3b, 0xb3, 0x5e, 0xd7, 0xbb, 0xa9, 0xd3, 0x93, 0xb5,
	0xef, 0xfd, 0xde, 0xfb, 0xfd, 0xde, 0x9f, 0x7d, 0x5e, 0x78, 0xcd, 0xe9, 0x3d, 0x0e, 0xad, 0x80,
	0xb3, 0x1f, 0x88, 0x23, 0x42, 0xeb, 0xb0, 0x81, 0xbd, 0xe0, 0x00, 0x37, 0x12, 0x8b, 0x19, 0x70,
	0x26, 0x18, 0xfa, 0x20, 0x82, 0x99, 0x89, 0x51, 0xc3, 0xca, 0xd7, 0x65, 0x38, 0xc5, 0x03, 0x8b,
	0x05, 0x82, 0x32, 0x3f, 0x95, 0x41, 0x19, 0xe2, 0x04, 0xe5, 0x6b, 0x09, 0x30, 0x60, 0x1e, 0x75,
	0x46, 0x29, 0x26, 0xf9, 0xac, 0x60, 0x56, 0x2e, 0x8c, 0x93, 0x9f, 0x86, 0x24, 0x14, 0x5d, 0x4e,
	0xc2, 0x80, 0xf9, 0x21, 0x51, 0x01, 0x5b, 0xa7, 0xeb, 0x57, 0xa8, 0x0f, 0x5d, 0xc6, 0x5c, 0x8f,
	0x58, 0x38, 0xa0, 0x16, 0xf6, 0x7d, 0x26, 0x70, 0x5a, 0xdb, 0x7a, 0xca, 0xeb, 0x78, 0x94, 0xf8,
	0x3a, 0xec, 0x72, 0xca, 0xf1, 0x88, 0x12, 0xaf, 0xdf, 0xed, 0x91, 0x03, 0x7c, 0x48, 0x19, 0x57,
	0x80, 0x4b, 0x29, 0x00, 0x27, 0x21, 0x1b, 0x72, 0x47, 0x0b, 0xbb, 0xaa, 0x5c, 0x1e, 0xf3, 0x5d,
	0x3e, 0xf4, 0x7d, 0xea, 0xbb, 0x16, 0x0b, 0x08, 0x4f, 0x33, 0x1b, 0xc7, 0x00, 0x96, 0xf6, 0x38,
	0xc1, 0x82, 0x34, 0x63, 0xbd, 0xad, 0xb8, 0x4a, 0xb4, 0x0f, 0x97, 0x03, 0xcc, 0x89, 0x2f, 0x36,
	0x40, 0x15, 0xdc, 0x28, 0xde, 0xb5, 0x5e, 0xda, 0x85, 0x57, 0xf6, 0x36, 0xbc, 0xce, 0xb8, 0x8b,
	0x7d, 0x3a, 0x56, 0x59, 0x1c, 0x8f, 0x0d, 0xfb, 0x3d, 0x82, 0xb9, 0xe9, 0x7b, 0xd6, 0x83, 0x94,
	0xab, 0xa5, 0xc2, 0xd1, 0x3a, 0x7c, 0xc7, 0xc7, 0x03, 0xb2, 0x51, 0x90, 0x69, 0x96, 0x5e, 0xda,
	0x85, 0x96, 0x34, 0xa0, 0xcf, 0xe0, 0x39, 0xd5, 0xa3, 0x8d, 0xa5, 0x2a, 0xb8, 0xf1, 0xde, 0xce,
	0x65, 0x33, 0x7b, 0xc6, 0xa6, 0x96, 0xa6, 0xf1, 0xc6, 0xb7, 0xf0, 0xc2, 0x37, 0x34, 0x14, 0xca,
	0x1e, 0x6a, 0xcd, 0x15, 0x58, 0x0c, 0xb0, 0x4b, 0xba, 0x21, 0x1d, 0xc7, 0x7c, 0xef, 0xb6, 0x56,
	0x22, 0x43, 0x9b, 0x8e, 0x09, 0xda, 0x84, 0x50, 0x3a, 0x05, 0xfb, 0x91, 0xf8, 0x92, 0xb1, 0xd8,
	0x92, 0xf0, 0x87, 0x91, 0xc1, 0x78, 0x02, 0x4b, 0xb3, 0x29, 0xe3, 0x21, 0xa3, 0x3b, 0x70, 0x45,
	0x0b, 0xda, 0x00, 0xd5, 0xa5, 0x45, 0x64, 0x26, 0x01, 0xe8, 0x63, 0xb8, 0xe6, 0x93, 0x23, 0xd1,
	0x4d, 0x11, 0xcb, 0x36, 0xb4, 0x56, 0x23, 0x73, 0x33, 0x21, 0xff, 0x1a, 0x9e, 0xdf, 0x27, 0xe2,
	0xb5, 0x09, 0x7c, 0xaa, 0x1a, 0x17, 0xf7, 0xff, 0x8a, 0xec, 0x7f, 0x05, 0x5e, 0x4a, 0x78, 0xa5,
	0x8a, 0xa3, 0xd1, 0xd8, 0xd2, 0x71, 0x12, 0x6e, 0xdc, 0x87, 0xa5, 0x2f, 0x89, 0x47, 0xe6, 0x06,
	0xfa, 0x96, 0xe9, 0xd6, 0xe1, 0xc5, 0x99, 0x74, 0xf7, 0x89, 0xc0, 0x7d, 0x2c, 0xf0, 0xce, 0x5f,
	0x45, 0xb8, 0xa6, 0xbb, 0xd5, 0x26, 0xfc, 0x90, 0x3a, 0x04, 0xfd, 0x0a, 0xe0, 0xea, 0xcc, 0x36,
	0xa1, 0x7a, 0x5e, 0xb3, 0xb2, 0x96, 0xae, 0xfc, 0xa6, 0xd6, 0x1a, 0x3b, 0xcf, 0x8e, 0x2b, 0xe7,
	0xd4, 0xc3, 0x2f, 0xc7, 0x95, 0x65, 0x47, 0x66, 0x79, 0xf6, 0xf7, 0xbf, 0xbf, 0x15, 0xd6, 0x0d,
	0x34, 0x7f, 0x3c, 0x76, 0x41, 0x0d, 0x3d, 0x07, 0xf0, 0xfd, 0xf4, 0x68, 0xd1, 0xcd, 0x3c, 0x96,
	0x8c, 0x9d, 0x2a, 0xd7, 0x17, 0x03, 0xc7, 0xdb, 0x62, 0x5c, 0x99, 0xd8, 0xb2, 0x6d, 0x52, 0x51,
	0x09, 0x65, 0x28, 0x42, 0x2f, 0x00, 0x84, 0xd3, 0x61, 0xa3, 0xed, 0xbc, 0xfc, 0x73, 0x0b, 0xf1,
	0xe6, 0xee, 0x7c, 0xae, 0xd9, 0x67, 0x9a, 0xb4, 0xe4, 0x12, 0x21, 0xf5, 0x6c, 0xa2, 0xca, 0x54,
	0xcf, 0x93, 0x08, 0xf8, 0x45, 0x72, 0xb6, 0x6a, 0x4f, 0xd1, 0x7f, 0x00, 0xae, 0xce, 0x8c, 0x3a,
	0x7f, 0x78, 0x59, 0x0b, 0x56, 0xde, 0x34, 0xe3, 0x83, 0x63, 0xa6, 0x0e, 0x8e, 0xf9, 0x40, 0x1f,
	0x1c, 0xe3, 0x67, 0x70, 0x62, 0xdf, 0x83, 0x17, 0x15, 0x46, 0x5e, 0x9f, 0xde, 0xf0, 0x91, 0x79,
	0x6f, 0x10, 0x88, 0x11, 0xaa, 0x2f, 0x42, 0xa4, 0x57, 0x2f, 0xb3, 0xca, 0xe5, 0xbe, 0x84, 0xc6,
	0x85, 0xd6, 0x4e, 0x2d, 0xf4, 0x39, 0x80, 0xc5, 0xa8, 0xbb, 0xf2, 0xbe, 0xa3, 0x5a, 0x5c, 0x24,
	0xc5, 0x03, 0x53, 0xfd, 0x11, 0xcc, 0x8c, 0x40, 0x9a, 0x74, 0x89, 0xd5, 0x7c, 0x6c, 0x0c, 0x34,
	0x1a, 0x13, 0x7b, 0x45, 0xdf, 0x61, 0xa9, 0xa5, 0x6a, 0x7c, 0x94, 0xd2, 0xa2, 0x5d, 0x4f, 0x77,
	0xdd, 0x44, 0xc0, 0x0b, 0x00, 0x8b, 0xed, 0x45, 0xe4, 0xb4, 0xcf, 0x2e, 0xe7, 0xce, 0xc4, 0x5e,
	0xd3, 0x9c, 0xf5, 0x18, 0x23, 0x55, 0x5d, 0xcd, 0x51, 0x15, 0x6a, 0x8a, 0xe8, 0xc5, 0xf9, 0x13,
	0xc0, 0xb5, 0x87, 0x24, 0x14, 0x4d, 0xc2, 0x07, 0x34, 0x0c, 0xa3, 0x7b, 0x8f, 0x3e, 0xc9, 0xa7,
	0x7c, 0x0d, 0xaa, 0x45, 0x36, 0xce, 0x10, 0xa1, 0xde, 0xa2, 0xaf, 0x26, 0x76, 0x69, 0xaa, 0x7a,
	0x0a, 0x90, 0xd2, 0xb7, 0x8d, 0xad, 0x4c, 0xe9, 0x62, 0x36, 0xd9, 0x2e, 0xa8, 0x95, 0x6f, 0x9e,
	0xd8, 0xe7, 0xe7, 0xee, 0xdb, 0xab, 0x3f, 0x2a, 0x17, 0xe0, 0xbc, 0xf9, 0xee, 0xef, 0x00, 0x96,
	0x8f, 0x46, 0xe3, 0x9c, 0x95, 0x6f, 0x82, 0xef, 0x6f, 0xbb, 0x54, 0x1c, 0x0c, 0x7b, 0xa6, 0xc3,
	0x06, 0xf1, 0x47, 0x82, 0xcb, 0x6e, 0x45, 0xbf, 0xb7, 0x5c, 0x1e, 0x38, 0x56, 0xf6, 0x57, 0xc0,
	0x49, 0xa1, 0xb2, 0xd7, 0x7b, 0x1c, 0x76, 0xf4, 0xa1, 0xe8, 0xec, 0xb7, 0x9a, 0x7b, 0x9d, 0xef,
	0x94, 0xf7, 0x9f, 0xc2, 0xd6, 0x29, 0xde, 0x8e, 0xde, 0xf7, 0xde, 0xb2, 0x7c, 0x5b, 0x6e, 0xff,
	0x1f, 0x00, 0x00, 0xff, 0xff, 0x6f, 0x03, 0x00, 0xb2, 0x2b, 0x09, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// ProjectsServiceClient is the client API for ProjectsService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ProjectsServiceClient interface {
	// Create a project, requires the projects.cbws.xyz/Project/create permission on the organization.
	// The principal creating a project will get the owner role on the project.
	CreateProject(ctx context.Context, in *CreateProjectRequest, opts ...grpc.CallOption) (*Project, error)
	// List all projects you have access to
	// Requires the projects.cbws.xyz/Project/get permission on the project
	ListProjects(ctx context.Context, in *ListProjectsRequest, opts ...grpc.CallOption) (*ListProjectsResponse, error)
	GetProject(ctx context.Context, in *GetProjectRequest, opts ...grpc.CallOption) (*Project, error)
	DeleteProject(ctx context.Context, in *DeleteProjectRequest, opts ...grpc.CallOption) (*longrunning.Operation, error)
	// Returns the IAM access control policy for a Project.
	GetPolicy(ctx context.Context, in *v1alpha1.GetPolicyRequest, opts ...grpc.CallOption) (*v1alpha1.Policy, error)
	// Sets the IAM access control policy for a Project.
	SetPolicy(ctx context.Context, in *v1alpha1.SetPolicyRequest, opts ...grpc.CallOption) (*v1alpha1.Policy, error)
	// Tests the specified permissions against the IAM access control policy
	// for a Project.
	TestPermissions(ctx context.Context, in *v1alpha1.TestPermissionsRequest, opts ...grpc.CallOption) (*v1alpha1.TestPermissionsResponse, error)
}

type projectsServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewProjectsServiceClient(cc grpc.ClientConnInterface) ProjectsServiceClient {
	return &projectsServiceClient{cc}
}

func (c *projectsServiceClient) CreateProject(ctx context.Context, in *CreateProjectRequest, opts ...grpc.CallOption) (*Project, error) {
	out := new(Project)
	err := c.cc.Invoke(ctx, "/cbws.projects.v1alpha1.ProjectsService/CreateProject", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *projectsServiceClient) ListProjects(ctx context.Context, in *ListProjectsRequest, opts ...grpc.CallOption) (*ListProjectsResponse, error) {
	out := new(ListProjectsResponse)
	err := c.cc.Invoke(ctx, "/cbws.projects.v1alpha1.ProjectsService/ListProjects", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *projectsServiceClient) GetProject(ctx context.Context, in *GetProjectRequest, opts ...grpc.CallOption) (*Project, error) {
	out := new(Project)
	err := c.cc.Invoke(ctx, "/cbws.projects.v1alpha1.ProjectsService/GetProject", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *projectsServiceClient) DeleteProject(ctx context.Context, in *DeleteProjectRequest, opts ...grpc.CallOption) (*longrunning.Operation, error) {
	out := new(longrunning.Operation)
	err := c.cc.Invoke(ctx, "/cbws.projects.v1alpha1.ProjectsService/DeleteProject", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *projectsServiceClient) GetPolicy(ctx context.Context, in *v1alpha1.GetPolicyRequest, opts ...grpc.CallOption) (*v1alpha1.Policy, error) {
	out := new(v1alpha1.Policy)
	err := c.cc.Invoke(ctx, "/cbws.projects.v1alpha1.ProjectsService/GetPolicy", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *projectsServiceClient) SetPolicy(ctx context.Context, in *v1alpha1.SetPolicyRequest, opts ...grpc.CallOption) (*v1alpha1.Policy, error) {
	out := new(v1alpha1.Policy)
	err := c.cc.Invoke(ctx, "/cbws.projects.v1alpha1.ProjectsService/SetPolicy", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *projectsServiceClient) TestPermissions(ctx context.Context, in *v1alpha1.TestPermissionsRequest, opts ...grpc.CallOption) (*v1alpha1.TestPermissionsResponse, error) {
	out := new(v1alpha1.TestPermissionsResponse)
	err := c.cc.Invoke(ctx, "/cbws.projects.v1alpha1.ProjectsService/TestPermissions", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ProjectsServiceServer is the server API for ProjectsService service.
type ProjectsServiceServer interface {
	// Create a project, requires the projects.cbws.xyz/Project/create permission on the organization.
	// The principal creating a project will get the owner role on the project.
	CreateProject(context.Context, *CreateProjectRequest) (*Project, error)
	// List all projects you have access to
	// Requires the projects.cbws.xyz/Project/get permission on the project
	ListProjects(context.Context, *ListProjectsRequest) (*ListProjectsResponse, error)
	GetProject(context.Context, *GetProjectRequest) (*Project, error)
	DeleteProject(context.Context, *DeleteProjectRequest) (*longrunning.Operation, error)
	// Returns the IAM access control policy for a Project.
	GetPolicy(context.Context, *v1alpha1.GetPolicyRequest) (*v1alpha1.Policy, error)
	// Sets the IAM access control policy for a Project.
	SetPolicy(context.Context, *v1alpha1.SetPolicyRequest) (*v1alpha1.Policy, error)
	// Tests the specified permissions against the IAM access control policy
	// for a Project.
	TestPermissions(context.Context, *v1alpha1.TestPermissionsRequest) (*v1alpha1.TestPermissionsResponse, error)
}

// UnimplementedProjectsServiceServer can be embedded to have forward compatible implementations.
type UnimplementedProjectsServiceServer struct {
}

func (*UnimplementedProjectsServiceServer) CreateProject(ctx context.Context, req *CreateProjectRequest) (*Project, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateProject not implemented")
}
func (*UnimplementedProjectsServiceServer) ListProjects(ctx context.Context, req *ListProjectsRequest) (*ListProjectsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListProjects not implemented")
}
func (*UnimplementedProjectsServiceServer) GetProject(ctx context.Context, req *GetProjectRequest) (*Project, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetProject not implemented")
}
func (*UnimplementedProjectsServiceServer) DeleteProject(ctx context.Context, req *DeleteProjectRequest) (*longrunning.Operation, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteProject not implemented")
}
func (*UnimplementedProjectsServiceServer) GetPolicy(ctx context.Context, req *v1alpha1.GetPolicyRequest) (*v1alpha1.Policy, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetPolicy not implemented")
}
func (*UnimplementedProjectsServiceServer) SetPolicy(ctx context.Context, req *v1alpha1.SetPolicyRequest) (*v1alpha1.Policy, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetPolicy not implemented")
}
func (*UnimplementedProjectsServiceServer) TestPermissions(ctx context.Context, req *v1alpha1.TestPermissionsRequest) (*v1alpha1.TestPermissionsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method TestPermissions not implemented")
}

func RegisterProjectsServiceServer(s *grpc.Server, srv ProjectsServiceServer) {
	s.RegisterService(&_ProjectsService_serviceDesc, srv)
}

func _ProjectsService_CreateProject_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateProjectRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProjectsServiceServer).CreateProject(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cbws.projects.v1alpha1.ProjectsService/CreateProject",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProjectsServiceServer).CreateProject(ctx, req.(*CreateProjectRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProjectsService_ListProjects_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListProjectsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProjectsServiceServer).ListProjects(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cbws.projects.v1alpha1.ProjectsService/ListProjects",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProjectsServiceServer).ListProjects(ctx, req.(*ListProjectsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProjectsService_GetProject_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetProjectRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProjectsServiceServer).GetProject(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cbws.projects.v1alpha1.ProjectsService/GetProject",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProjectsServiceServer).GetProject(ctx, req.(*GetProjectRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProjectsService_DeleteProject_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteProjectRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProjectsServiceServer).DeleteProject(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cbws.projects.v1alpha1.ProjectsService/DeleteProject",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProjectsServiceServer).DeleteProject(ctx, req.(*DeleteProjectRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProjectsService_GetPolicy_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(v1alpha1.GetPolicyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProjectsServiceServer).GetPolicy(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cbws.projects.v1alpha1.ProjectsService/GetPolicy",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProjectsServiceServer).GetPolicy(ctx, req.(*v1alpha1.GetPolicyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProjectsService_SetPolicy_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(v1alpha1.SetPolicyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProjectsServiceServer).SetPolicy(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cbws.projects.v1alpha1.ProjectsService/SetPolicy",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProjectsServiceServer).SetPolicy(ctx, req.(*v1alpha1.SetPolicyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProjectsService_TestPermissions_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(v1alpha1.TestPermissionsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProjectsServiceServer).TestPermissions(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cbws.projects.v1alpha1.ProjectsService/TestPermissions",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProjectsServiceServer).TestPermissions(ctx, req.(*v1alpha1.TestPermissionsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _ProjectsService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "cbws.projects.v1alpha1.ProjectsService",
	HandlerType: (*ProjectsServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateProject",
			Handler:    _ProjectsService_CreateProject_Handler,
		},
		{
			MethodName: "ListProjects",
			Handler:    _ProjectsService_ListProjects_Handler,
		},
		{
			MethodName: "GetProject",
			Handler:    _ProjectsService_GetProject_Handler,
		},
		{
			MethodName: "DeleteProject",
			Handler:    _ProjectsService_DeleteProject_Handler,
		},
		{
			MethodName: "GetPolicy",
			Handler:    _ProjectsService_GetPolicy_Handler,
		},
		{
			MethodName: "SetPolicy",
			Handler:    _ProjectsService_SetPolicy_Handler,
		},
		{
			MethodName: "TestPermissions",
			Handler:    _ProjectsService_TestPermissions_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "cbws/projects/v1alpha1/projects.proto",
}
